///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.1.3056 for 8051               13/Sep/2016  14:45:56
// Copyright 2004-2015 IAR Systems AB.
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\Source\zha_project_data.c
//    Command line       =  
//        -f "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=10000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\Source\zha_project_data.c"
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        HOLD_AUTO_START -D xBUILD_ALL_DEVICES -D HAL_UART=TRUE -D xZTOOL_P1
//        -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
//        xLCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
//        ZCL_WRITE -D ZCL_REPORT -D ZCL_EZMODE -D ZCL_BASIC -D ZCL_IDENTIFY -D
//        ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS -D ZCL_LEVEL_CTRL -D ZCL_WD -D
//        ZCL_DIAGNOSTIC -D FEATURE_SYSTEM_STATS -D
//        DEVICE_LOGICAL_TYPE=ZG_DEVICETYPE_COORDINATOR -lC "C:\Texas
//        Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\List"
//        -lA "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\List"
//        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -I "C:\Texas
//        Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\Source\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\Source\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz
//    List file          =  
//        C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\List\zha_project_data.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zha_project_data

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC zha_project_Alarm_Status
        PUBLIC zha_project_Alarm_Type
        PUBLIC zha_project_Attrs
        PUBLIC zha_project_BatteryPercent
        PUBLIC zha_project_BatteryVoltage
        PUBLIC zha_project_DateCode
        PUBLIC zha_project_DeviceEnable
        PUBLIC zha_project_HUE_Status
        PUBLIC zha_project_HWRevision
        PUBLIC zha_project_Humidity_Value
        PUBLIC zha_project_IdentifyCommissionState
        PUBLIC zha_project_IdentifyTime
        PUBLIC zha_project_Illumiance_Value
        PUBLIC zha_project_InClusterList
        PUBLIC zha_project_LevelCurrentLevel
        PUBLIC zha_project_LevelDefaultMoveRate
        PUBLIC zha_project_LevelOffTransitionTime
        PUBLIC zha_project_LevelOnLevel
        PUBLIC zha_project_LevelOnOffTransitionTime
        PUBLIC zha_project_LevelOnTransitionTime
        PUBLIC zha_project_LevelRemainingTime
        PUBLIC zha_project_Level_to_Level
        PUBLIC zha_project_Light_Color_Status
        PUBLIC zha_project_LocationDescription
        PUBLIC zha_project_ManufacturerName
        PUBLIC zha_project_ModelId
        PUBLIC zha_project_NumAttributes
        PUBLIC zha_project_OnOff
        PUBLIC zha_project_OutClusterList
        PUBLIC zha_project_PhysicalEnvironment
        PUBLIC zha_project_PowerSource
        PUBLIC zha_project_Saturation
        PUBLIC zha_project_SimpleDesc
        PUBLIC zha_project_Smoke_Type
        PUBLIC zha_project_Temperature_Value
        PUBLIC zha_project_WD_Duration
        PUBLIC zha_project_WD_SQUAWK
        PUBLIC zha_project_Warning
        PUBLIC zha_project_ZCLVersion
// C:\Texas Instruments\Z-Stack Home 1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\Source\zha_project_data.c
//    1 /**************************************************************************************************
//    2   Filename:       zha_project_data.c
//    3   Revised:        $Date: 2014-05-12 13:14:02 -0700 (Mon, 12 May 2014) $
//    4   Revision:       $Revision: 38502 $
//    5 
//    6 
//    7   Description:    Zigbee Cluster Library - sample device application.
//    8 
//    9 
//   10   Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License").  You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product.  Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "OSAL.h"
//   46 #include "AF.h"
//   47 #include "ZDConfig.h"
//   48 
//   49 #include "zcl.h"
//   50 #include "zcl_general.h"
//   51 #include "zcl_ha.h"
//   52 #include "zcl_ss.h"
//   53 #include "zcl_se.h"
//   54 #include "zcl_ms.h"
//   55 #include "zcl_lighting.h"
//   56 #include "zcl_ezmode.h"
//   57 #include "zcl_poll_control.h"
//   58 #include "zcl_electrical_measurement.h"
//   59 #include "zcl_diagnostic.h"
//   60 #include "zcl_meter_identification.h"
//   61 #include "zcl_appliance_identification.h"
//   62 #include "zcl_appliance_events_alerts.h"
//   63 #include "zcl_power_profile.h"
//   64 #include "zcl_appliance_control.h"
//   65 #include "zcl_appliance_statistics.h"
//   66 #include "zcl_hvac.h"
//   67 
//   68 #include "zha_project.h"
//   69 
//   70 /*********************************************************************
//   71  * CONSTANTS
//   72  */
//   73 
//   74 #define zha_project_DEVICE_VERSION     0
//   75 #define zha_project_FLAGS              0
//   76 
//   77 #define SAMPLELIGHT_HWVERSION          1
//   78 #define SAMPLELIGHT_ZCLVERSION         1
//   79 
//   80 /*********************************************************************
//   81  * TYPEDEFS
//   82  */
//   83 
//   84 /*********************************************************************
//   85  * MACROS
//   86  */
//   87 
//   88 /*********************************************************************
//   89  * GLOBAL VARIABLES
//   90  */
//   91 
//   92 // Basic Cluster

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   93 const uint8 zha_project_HWRevision = SAMPLELIGHT_HWVERSION;
zha_project_HWRevision:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   94 const uint8 zha_project_ZCLVersion = SAMPLELIGHT_ZCLVERSION;
zha_project_ZCLVersion:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   95 const uint8 zha_project_ManufacturerName[] = { 16, 'T','e','x','a','s','I','n','s','t','r','u','m','e','n','t','s' };
zha_project_ManufacturerName:
        DB 16
        DB 84
        DB 101
        DB 120
        DB 97
        DB 115
        DB 73
        DB 110
        DB 115
        DB 116
        DB 114
        DB 117
        DB 109
        DB 101
        DB 110
        DB 116
        DB 115

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   96 const uint8 zha_project_ModelId[] = { 16, 'T','I','0','0','0','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
zha_project_ModelId:
        DB 16
        DB 84
        DB 73
        DB 48
        DB 48
        DB 48
        DB 49
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   97 const uint8 zha_project_DateCode[] = { 16, '2','0','0','6','0','8','3','1',' ',' ',' ',' ',' ',' ',' ',' ' };
zha_project_DateCode:
        DB 16
        DB 50
        DB 48
        DB 48
        DB 54
        DB 48
        DB 56
        DB 51
        DB 49
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   98 const uint8 zha_project_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
zha_project_PowerSource:
        DB 1
//   99 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  100 uint8 zha_project_LocationDescription[17] = { 16, ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
zha_project_LocationDescription:
        DATA8
        DS 17
        REQUIRE `?<Initializer for zha_project_LocationDescript`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  101 uint8 zha_project_PhysicalEnvironment = 0;
zha_project_PhysicalEnvironment:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  102 uint8 zha_project_DeviceEnable = DEVICE_ENABLED;
zha_project_DeviceEnable:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_DeviceEnable>`
        REQUIRE __INIT_XDATA_I
//  103 
//  104 // Identify Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  105 uint16 zha_project_IdentifyTime = 0;
zha_project_IdentifyTime:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  106 #ifdef ZCL_EZMODE

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  107 uint8  zha_project_IdentifyCommissionState;
zha_project_IdentifyCommissionState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  108 #endif

        RSEG XDATA_I:XDATA:NOROOT(0)
//  109 uint8 zha_project_BatteryVoltage=5;
zha_project_BatteryVoltage:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_BatteryVoltage>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  110 uint8 zha_project_BatteryPercent=30;
zha_project_BatteryPercent:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_BatteryPercent>`
        REQUIRE __INIT_XDATA_I
//  111 
//  112 
//  113 // On/Off Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  114 uint8  zha_project_OnOff = LIGHT_OFF;
zha_project_OnOff:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  115 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  116 uint8  zha_project_Level_to_Level = 0;
zha_project_Level_to_Level:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  117 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  118 uint16 zha_project_Alarm_Status=0;
zha_project_Alarm_Status:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  119 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  120 uint16 zha_project_Alarm_Type=0x00;
zha_project_Alarm_Type:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  121 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  122 uint16 zha_project_Smoke_Type=0x00;
zha_project_Smoke_Type:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  123 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  124 uint16 zha_project_Light_Color_Status=0x0000;
zha_project_Light_Color_Status:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  125 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  126 int16 zha_project_Temperature_Value=0x0000;
zha_project_Temperature_Value:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  127 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  128 uint16 zha_project_Humidity_Value=0x00;
zha_project_Humidity_Value:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  129 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  130 uint16 zha_project_Illumiance_Value=0x0000;
zha_project_Illumiance_Value:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  131 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  132 uint8 zha_project_Saturation=0x00;
zha_project_Saturation:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  133 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  134 uint16 zha_project_HUE_Status;
zha_project_HUE_Status:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  135 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  136 uint8 zha_project_WD_Duration;
zha_project_WD_Duration:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  137 uint8 zha_project_Warning;
zha_project_Warning:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  138 uint8 zha_project_WD_SQUAWK;
zha_project_WD_SQUAWK:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  139 
//  140 
//  141 // Level Control Cluster
//  142 #ifdef ZCL_LEVEL_CTRL

        RSEG XDATA_I:XDATA:NOROOT(0)
//  143 uint8  zha_project_LevelCurrentLevel = ATTR_LEVEL_MIN_LEVEL;
zha_project_LevelCurrentLevel:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_LevelCurrentLeve`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  144 uint16 zha_project_LevelRemainingTime;
zha_project_LevelRemainingTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  145 uint16 zha_project_LevelOnOffTransitionTime = 20;
zha_project_LevelOnOffTransitionTime:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zha_project_LevelOnOffTransi`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  146 uint8  zha_project_LevelOnLevel = ATTR_LEVEL_MID_LEVEL;
zha_project_LevelOnLevel:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_LevelOnLevel>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  147 uint16 zha_project_LevelOnTransitionTime = 20;
zha_project_LevelOnTransitionTime:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zha_project_LevelOnTransitio`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  148 uint16 zha_project_LevelOffTransitionTime = 20;
zha_project_LevelOffTransitionTime:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zha_project_LevelOffTransiti`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  149 uint8  zha_project_LevelDefaultMoveRate = 0;   // as fast as possible
zha_project_LevelDefaultMoveRate:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  150 #endif
//  151 
//  152 #if ZCL_DISCOVER
//  153 CONST zclCommandRec_t zha_project_Cmds[] =
//  154 {
//  155   {
//  156     ZCL_CLUSTER_ID_GEN_BASIC,
//  157     COMMAND_BASIC_RESET_FACT_DEFAULT,
//  158     CMD_DIR_SERVER_RECEIVED
//  159   },
//  160   {
//  161     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  162     COMMAND_OFF,
//  163     CMD_DIR_SERVER_RECEIVED
//  164   },
//  165   {
//  166     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  167     COMMAND_ON,
//  168     CMD_DIR_SERVER_RECEIVED
//  169   },
//  170   {
//  171     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  172     COMMAND_TOGGLE,
//  173     CMD_DIR_SERVER_RECEIVED
//  174   },
//  175 #ifdef ZCL_LEVEL_CONTROL
//  176   ,{
//  177     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  178     COMMAND_LEVEL_MOVE_TO_LEVEL,
//  179     CMD_DIR_SERVER_RECEIVED
//  180   },
//  181   {
//  182     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  183     COMMAND_LEVEL_MOVE,
//  184     CMD_DIR_SERVER_RECEIVED
//  185   },
//  186   {
//  187     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  188     COMMAND_LEVEL_STEP,
//  189     CMD_DIR_SERVER_RECEIVED
//  190   },
//  191   {
//  192     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  193     COMMAND_LEVEL_STOP,
//  194     CMD_DIR_SERVER_RECEIVED
//  195   },
//  196   {
//  197     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  198     COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF,
//  199     CMD_DIR_SERVER_RECEIVED
//  200   },
//  201   {
//  202     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  203     COMMAND_LEVEL_MOVE_WITH_ON_OFF,
//  204     CMD_DIR_SERVER_RECEIVED
//  205   },
//  206   {
//  207     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  208     COMMAND_LEVEL_STEP_WITH_ON_OFF,
//  209     CMD_DIR_SERVER_RECEIVED
//  210   },
//  211   {
//  212     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  213     COMMAND_LEVEL_STOP_WITH_ON_OFF,
//  214     CMD_DIR_SERVER_RECEIVED
//  215   }
//  216 #endif // ZCL_LEVEL_CONTROL
//  217 };
//  218 
//  219 CONST uint8 zclCmdsArraySize = ( sizeof(zha_project_Cmds) / sizeof(zha_project_Cmds[0]) );
//  220 #endif // ZCL_DISCOVER
//  221 
//  222 /*********************************************************************
//  223  * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
//  224  */

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  225 CONST zclAttrRec_t zha_project_Attrs[] =
zha_project_Attrs:
        DATA16
        DW 0
        DW 3
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_HWRevision
        DW 0
        DW 0
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_ZCLVersion
        DW 0
        DW 4
        DATA8
        DB 66
        DB 1
        DATA16
        DW zha_project_ManufacturerName
        DW 0
        DW 5
        DATA8
        DB 66
        DB 1
        DATA16
        DW zha_project_ModelId
        DW 0
        DW 6
        DATA8
        DB 66
        DB 1
        DATA16
        DW zha_project_DateCode
        DW 0
        DW 7
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_PowerSource
        DW 0
        DW 16
        DATA8
        DB 66
        DB 3
        DATA16
        DW zha_project_LocationDescription
        DW 0
        DW 17
        DATA8
        DB 32
        DB 3
        DATA16
        DW zha_project_PhysicalEnvironment
        DW 0
        DW 18
        DATA8
        DB 16
        DB 3
        DATA16
        DW zha_project_DeviceEnable
        DW 1
        DW 32
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_BatteryPercent
        DW 1
        DW 33
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_BatteryVoltage
        DW 3
        DW 0
        DATA8
        DB 33
        DB 3
        DATA16
        DW zha_project_IdentifyTime
        DW 3
        DW 1
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_IdentifyCommissionState
        DW 2821
        DW 0
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 1
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 256
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 257
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 258
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 259
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 260
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 261
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 262
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 263
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 264
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 265
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 266
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 267
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 268
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 269
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 270
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 271
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 272
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 273
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 274
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 275
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 276
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 277
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 278
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 279
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 280
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 281
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 282
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 283
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 284
        DATA8
        DB 32
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 285
        DATA8
        DB 40
        DB 1
        DATA16
        DW 0H
//  226 {
//  227   // *** General Basic Cluster Attributes ***
//  228   {
//  229     ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
//  230     {  // Attribute record
//  231       ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
//  232       ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
//  233       ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
//  234       (void *)&zha_project_HWRevision  // Pointer to attribute variable
//  235     }
//  236   },
//  237   {
//  238     ZCL_CLUSTER_ID_GEN_BASIC,
//  239     { // Attribute record
//  240       ATTRID_BASIC_ZCL_VERSION,
//  241       ZCL_DATATYPE_UINT8,
//  242       ACCESS_CONTROL_READ,
//  243       (void *)&zha_project_ZCLVersion
//  244     }
//  245   },
//  246   {
//  247     ZCL_CLUSTER_ID_GEN_BASIC,
//  248     { // Attribute record
//  249       ATTRID_BASIC_MANUFACTURER_NAME,
//  250       ZCL_DATATYPE_CHAR_STR,
//  251       ACCESS_CONTROL_READ,
//  252       (void *)zha_project_ManufacturerName
//  253     }
//  254   },
//  255   {
//  256     ZCL_CLUSTER_ID_GEN_BASIC,
//  257     { // Attribute record
//  258       ATTRID_BASIC_MODEL_ID,
//  259       ZCL_DATATYPE_CHAR_STR,
//  260       ACCESS_CONTROL_READ,
//  261       (void *)zha_project_ModelId
//  262     }
//  263   },
//  264   {
//  265     ZCL_CLUSTER_ID_GEN_BASIC,
//  266     { // Attribute record
//  267       ATTRID_BASIC_DATE_CODE,
//  268       ZCL_DATATYPE_CHAR_STR,
//  269       ACCESS_CONTROL_READ,
//  270       (void *)zha_project_DateCode
//  271     }
//  272   },
//  273   {
//  274     ZCL_CLUSTER_ID_GEN_BASIC,
//  275     { // Attribute record
//  276       ATTRID_BASIC_POWER_SOURCE,
//  277       ZCL_DATATYPE_UINT8,
//  278       ACCESS_CONTROL_READ,
//  279       (void *)&zha_project_PowerSource
//  280     }
//  281   },
//  282   {
//  283     ZCL_CLUSTER_ID_GEN_BASIC,
//  284     { // Attribute record
//  285       ATTRID_BASIC_LOCATION_DESC,
//  286       ZCL_DATATYPE_CHAR_STR,
//  287       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  288       (void *)zha_project_LocationDescription
//  289     }
//  290   },
//  291   {
//  292     ZCL_CLUSTER_ID_GEN_BASIC,
//  293     { // Attribute record
//  294       ATTRID_BASIC_PHYSICAL_ENV,
//  295       ZCL_DATATYPE_UINT8,
//  296       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  297       (void *)&zha_project_PhysicalEnvironment
//  298     }
//  299   },
//  300   {
//  301     ZCL_CLUSTER_ID_GEN_BASIC,
//  302     { // Attribute record
//  303       ATTRID_BASIC_DEVICE_ENABLED,
//  304       ZCL_DATATYPE_BOOLEAN,
//  305       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  306       (void *)&zha_project_DeviceEnable
//  307     }
//  308   },
//  309   // ***Power Configuration Cluster Attributes***
//  310    {
//  311     ZCL_CLUSTER_ID_GEN_POWER_CFG,
//  312     { // Attribute record
//  313       ATTRID_POWER_CFG_BATTERY_VOLTAGE,
//  314       ZCL_DATATYPE_UINT8,
//  315       ACCESS_CONTROL_READ,
//  316       (void *)&zha_project_BatteryPercent
//  317     }
//  318   },
//  319    {
//  320     ZCL_CLUSTER_ID_GEN_POWER_CFG,
//  321     { // Attribute record
//  322       0x0021,
//  323       ZCL_DATATYPE_UINT8,
//  324       ACCESS_CONTROL_READ,
//  325       (void *)&zha_project_BatteryVoltage
//  326     }
//  327   },
//  328 #ifdef ZCL_IDENTIFY
//  329   // *** Identify Cluster Attribute ***
//  330   {
//  331     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  332     { // Attribute record
//  333       ATTRID_IDENTIFY_TIME,
//  334       ZCL_DATATYPE_UINT16,
//  335       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  336       (void *)&zha_project_IdentifyTime
//  337     }
//  338   },
//  339  #ifdef ZCL_EZMODE
//  340   // *** Identify Cluster Attribute ***
//  341   {
//  342     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  343     { // Attribute record
//  344       ATTRID_IDENTIFY_COMMISSION_STATE,
//  345       ZCL_DATATYPE_UINT8,
//  346       (ACCESS_CONTROL_READ),
//  347       (void *)&zha_project_IdentifyCommissionState
//  348     }
//  349   },
//  350  #endif // ZCL_EZMODE
//  351 #endif
//  352 
//  353   
//  354 #if ZG_BUILD_ENDDEVICE_TYPE  
//  355   // *** On/Off Cluster Attributes ***
//  356   {
//  357     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  358     { // Attribute record
//  359       ATTRID_ON_OFF,
//  360       ZCL_DATATYPE_BOOLEAN,
//  361       ACCESS_CONTROL_READ,
//  362       (void *)&zha_project_OnOff
//  363     }
//  364   },
//  365     // *** Level Cluster Attributes ***
//  366   {
//  367     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  368     { // Attribute record
//  369       ATTRID_LEVEL_CURRENT_LEVEL,
//  370       ZCL_DATATYPE_UINT16,
//  371       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  372       (void *)&zha_project_Level_to_Level
//  373     }
//  374   },
//  375   
//  376       // *** Level Cluster Attributes ***
//  377   {
//  378     ZCL_CLUSTER_ID_SS_IAS_ZONE,
//  379     { // Attribute record
//  380       ATTRID_SS_IAS_ZONE_STATUS,
//  381       ZCL_DATATYPE_BITMAP16,
//  382       ACCESS_CONTROL_READ ,
//  383       (void *)&zha_project_Alarm_Status
//  384     }
//  385   },
//  386   
//  387 
//  388   {
//  389     ZCL_CLUSTER_ID_SS_IAS_ZONE,
//  390     { // Attribute record
//  391       ATTRID_SS_IAS_ZONE_TYPE,
//  392       ZCL_DATATYPE_ENUM16,
//  393       ACCESS_CONTROL_READ ,
//  394       (void *)&zha_project_Smoke_Type
//  395     }
//  396   },
//  397     {
//  398     ZCL_CLUSTER_ID_SS_IAS_WD,
//  399     { // Attribute record
//  400       COMMAND_SS_IAS_WD_START_WARNING,
//  401       ZCL_DATATYPE_UINT8,
//  402       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  403       (void *)&zha_project_Warning
//  404     }
//  405   },
//  406     {
//  407     ZCL_CLUSTER_ID_SS_IAS_WD,
//  408     { // Attribute record
//  409       ATTRID_SS_IAS_WD_MAXIMUM_DURATION,
//  410       ZCL_DATATYPE_UINT8,
//  411       ACCESS_CONTROL_READ ,
//  412       (void *)&zha_project_WD_Duration
//  413     }
//  414   },
//  415     {
//  416     ZCL_CLUSTER_ID_SS_IAS_WD,
//  417     { // Attribute record
//  418       COMMAND_SS_IAS_WD_SQUAWK,
//  419       ZCL_DATATYPE_UINT8,
//  420       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  421       (void *)&zha_project_WD_SQUAWK
//  422     }
//  423   },  
//  424     {
//  425     ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  426     { // Attribute record
//  427       ATTRID_LIGHTING_COLOR_CONTROL_COLOR_TEMPERATURE,
//  428       ZCL_DATATYPE_UINT16,
//  429       ACCESS_CONTROL_READ ,
//  430       (void *)&zha_project_Light_Color_Status
//  431     }
//  432   },
//  433   {
//  434     ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  435     { // Attribute record
//  436       ATTRID_LIGHTING_COLOR_CONTROL_CURRENT_HUE,
//  437       ZCL_DATATYPE_UINT16,
//  438       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  439       (void *)&zha_project_HUE_Status
//  440     }
//  441   },
//  442   {
//  443     ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  444     { // Attribute record
//  445       ATTRID_LIGHTING_COLOR_CONTROL_CURRENT_SATURATION,
//  446       ZCL_DATATYPE_UINT8,
//  447       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  448       (void *)&zha_project_Saturation
//  449     }
//  450   },
//  451   {
//  452     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  453     { // Attribute record
//  454       ATTRID_MS_TEMPERATURE_MEASURED_VALUE,
//  455       ZCL_DATATYPE_INT16,
//  456       ACCESS_CONTROL_READ ,
//  457       (void *)&zha_project_Temperature_Value
//  458     }
//  459   },
//  460     {
//  461     ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
//  462     { // Attribute record
//  463       ATTRID_MS_RELATIVE_HUMIDITY_MEASURED_VALUE,
//  464       ZCL_DATATYPE_UINT16,
//  465       ACCESS_CONTROL_READ ,
//  466       (void *)&zha_project_Humidity_Value
//  467     }
//  468   },
//  469   {
//  470     ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
//  471     { // Attribute record
//  472       ATTRID_MS_ILLUMINANCE_MEASURED_VALUE,
//  473       ZCL_DATATYPE_UINT16,
//  474       ACCESS_CONTROL_READ ,
//  475       (void *)&zha_project_Illumiance_Value
//  476     }
//  477   },
//  478 #endif 
//  479 #if 0 
//  480 //Outlet Attributes
//  481   {
//  482     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  483     { 
//  484       ATTRID_SE_CURRENT_SUMMATION_DELIVERED,
//  485       ZCL_DATATYPE_UINT32,
//  486       ACCESS_CONTROL_READ ,
//  487       (void *)&zha_project_Illumiance_Value
//  488     }
//  489   },
//  490 
//  491   {
//  492     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  493     { 
//  494       ATTRID_MASK_SE_METER_STATUS,
//  495       ZCL_DATATYPE_UINT16,
//  496       ACCESS_CONTROL_READ ,
//  497       (void *)&zha_project_Illumiance_Value
//  498     }
//  499   },
//  500   
//  501    {
//  502     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  503     { 
//  504       ATTRID_MASK_SE_FORMATTING,
//  505       ZCL_DATATYPE_UINT16,
//  506       ACCESS_CONTROL_READ ,
//  507       (void *)&zha_project_Illumiance_Value
//  508     }
//  509   },
//  510    {
//  511     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  512     { 
//  513       ATTRID_MASK_SE_FORMATTING,
//  514       ZCL_DATATYPE_UINT16,
//  515       ACCESS_CONTROL_READ ,
//  516       (void *)&zha_project_Illumiance_Value
//  517     }
//  518   },
//  519    {
//  520     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  521     { 
//  522       ATTRID_SE_MULTIPLIER,
//  523       ZCL_DATATYPE_UINT16,
//  524       ACCESS_CONTROL_READ ,
//  525       (void *)&zha_project_Illumiance_Value
//  526     }
//  527   },
//  528    {
//  529     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  530     { 
//  531       ATTRID_SE_DIVISOR,
//  532       ZCL_DATATYPE_UINT16,
//  533       ACCESS_CONTROL_READ ,
//  534       (void *)&zha_project_Illumiance_Value
//  535     }
//  536   },
//  537    {
//  538     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  539     { 
//  540       ATTRID_SE_SUMMATION_FORMATTING,
//  541       ZCL_DATATYPE_UINT16,
//  542       ACCESS_CONTROL_READ ,
//  543       (void *)&zha_project_Illumiance_Value
//  544     }
//  545   },  
//  546    {
//  547     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  548     { 
//  549       ATTRID_SE_METERING_DEVICE_TYPE,
//  550       ZCL_DATATYPE_UINT16,
//  551       ACCESS_CONTROL_READ ,
//  552       (void *)&zha_project_Illumiance_Value
//  553     }
//  554   },    
//  555   
//  556   
//  557   {
//  558     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  559     { 
//  560       ATTRID_ELECTRICAL_MEASUREMENT_MEASUREMENT_TYPE,
//  561       ZCL_DATATYPE_BITMAP32,
//  562       ACCESS_CONTROL_READ ,
//  563       (void *)&zha_project_Illumiance_Value
//  564     }
//  565   },
//  566   {
//  567     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  568     { 
//  569       ATTRID_ELECTRICAL_MEASUREMENT_RMS_VOLTAGE,
//  570       ZCL_DATATYPE_UINT16,
//  571       ACCESS_CONTROL_READ ,
//  572       (void *)&zha_project_Illumiance_Value
//  573     }
//  574   },
//  575   {
//  576     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  577     { 
//  578       ATTRID_ELECTRICAL_MEASUREMENT_RMS_CURRENT,
//  579       ZCL_DATATYPE_UINT16,
//  580       ACCESS_CONTROL_READ ,
//  581       (void *)&zha_project_Illumiance_Value
//  582     }
//  583   },
//  584     {
//  585     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  586     { 
//  587       ATTRID_ELECTRICAL_MEASUREMENT_ACTIVE_POWER,
//  588       ZCL_DATATYPE_INT16,
//  589       ACCESS_CONTROL_READ ,
//  590       (void *)&zha_project_Illumiance_Value
//  591     }
//  592     },
//  593     {
//  594     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  595     { 
//  596       ATTRID_ELECTRICAL_MEASUREMENT_POWER_FACTOR,
//  597       ZCL_DATATYPE_INT8,
//  598       ACCESS_CONTROL_READ ,
//  599       (void *)&zha_project_Illumiance_Value
//  600     }
//  601     },
//  602     {
//  603     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  604     { 
//  605       ATTRID_ELECTRICAL_MEASUREMENT_AC_VOLTAGE_MULTIPLIER,
//  606       ZCL_DATATYPE_UINT16,
//  607       ACCESS_CONTROL_READ ,
//  608       (void *)&zha_project_Illumiance_Value
//  609     }
//  610     },
//  611     {
//  612     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  613     { 
//  614       ATTRID_ELECTRICAL_MEASUREMENT_AC_VOLTAGE_DIVISOR,
//  615       ZCL_DATATYPE_UINT16,
//  616       ACCESS_CONTROL_READ ,
//  617       (void *)&zha_project_Illumiance_Value
//  618     }
//  619     },
//  620     {
//  621     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  622     { 
//  623       ATTRID_ELECTRICAL_MEASUREMENT_AC_CURRENT_MULTIPLIER,
//  624       ZCL_DATATYPE_UINT16,
//  625       ACCESS_CONTROL_READ ,
//  626       (void *)&zha_project_Illumiance_Value
//  627     }
//  628     },
//  629     {
//  630     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  631     { 
//  632       ATTRID_ELECTRICAL_MEASUREMENT_AC_CURRENT_DIVISOR,
//  633       ZCL_DATATYPE_UINT16,
//  634       ACCESS_CONTROL_READ ,
//  635       (void *)&zha_project_Illumiance_Value
//  636     }
//  637     },
//  638     {
//  639     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  640     { 
//  641       ATTRID_ELECTRICAL_MEASUREMENT_AC_POWER_MULTIPLIER,
//  642       ZCL_DATATYPE_UINT16,
//  643       ACCESS_CONTROL_READ ,
//  644       (void *)&zha_project_Illumiance_Value
//  645     }
//  646     },
//  647     {
//  648     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  649     { 
//  650       ATTRID_ELECTRICAL_MEASUREMENT_AC_POWER_DIVISOR,
//  651       ZCL_DATATYPE_UINT16,
//  652       ACCESS_CONTROL_READ ,
//  653       (void *)&zha_project_Illumiance_Value
//  654     }
//  655     },
//  656     {
//  657     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  658     { 
//  659       ATTRID_ELECTRICAL_MEASUREMENT_AC_ALARMS_MASK,
//  660       ZCL_DATATYPE_BITMAP16,
//  661       ACCESS_CONTROL_READ ,
//  662       (void *)&zha_project_Illumiance_Value
//  663     }
//  664     },
//  665     {
//  666     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  667     { 
//  668       ATTRID_ELECTRICAL_MEASUREMENT_AC_VOLTAGE_OVERLOAD,
//  669       ZCL_DATATYPE_INT16,
//  670       ACCESS_CONTROL_READ ,
//  671       (void *)&zha_project_Illumiance_Value
//  672     }
//  673     },
//  674     {
//  675     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  676     { 
//  677       ATTRID_ELECTRICAL_MEASUREMENT_AC_CURRENT_OVERLOAD,
//  678       ZCL_DATATYPE_INT16,
//  679       ACCESS_CONTROL_READ ,
//  680       (void *)&zha_project_Illumiance_Value
//  681     }
//  682     },
//  683     {
//  684     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  685     { 
//  686       ATTRID_ELECTRICAL_MEASUREMENT_AC_ACTIVE_POWER_OVERLOAD,
//  687       ZCL_DATATYPE_INT16,
//  688       ACCESS_CONTROL_READ ,
//  689       (void *)&zha_project_Illumiance_Value
//  690     }
//  691     },
//  692 
//  693 #endif
//  694 #ifdef ZCL_DIAGNOSTIC
//  695    {
//  696     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  697     {  // Attribute record
//  698       ATTRID_DIAGNOSTIC_NUMBER_OF_RESETS,
//  699       ZCL_DATATYPE_UINT16,
//  700       ACCESS_CONTROL_READ,
//  701       NULL // Use application's callback to Read this attribute
//  702     }
//  703   },
//  704   {
//  705     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  706     {  // Attribute record
//  707       ATTRID_DIAGNOSTIC_PERSISTENT_MEMORY_WRITES,
//  708       ZCL_DATATYPE_UINT16,
//  709       ACCESS_CONTROL_READ,
//  710       NULL // Use application's callback to Read this attribute
//  711     }
//  712   },
//  713   {
//  714     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  715     {  // Attribute record
//  716       ATTRID_DIAGNOSTIC_MAC_RX_BCAST,
//  717       ZCL_DATATYPE_UINT32,
//  718       ACCESS_CONTROL_READ,
//  719       NULL // Use application's callback to Read this attribute
//  720     }
//  721   },
//  722   {
//  723     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  724     {  // Attribute record
//  725       ATTRID_DIAGNOSTIC_MAC_TX_BCAST,
//  726       ZCL_DATATYPE_UINT32,
//  727       ACCESS_CONTROL_READ,
//  728       NULL // Use application's callback to Read this attribute
//  729     }
//  730   },
//  731   {
//  732     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  733     {  // Attribute record
//  734       ATTRID_DIAGNOSTIC_MAC_RX_UCAST,
//  735       ZCL_DATATYPE_UINT32,
//  736       ACCESS_CONTROL_READ,
//  737       NULL // Use application's callback to Read this attribute
//  738     }
//  739   },
//  740   {
//  741     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  742     {  // Attribute record
//  743       ATTRID_DIAGNOSTIC_MAC_TX_UCAST,
//  744       ZCL_DATATYPE_UINT32,
//  745       ACCESS_CONTROL_READ,
//  746       NULL // Use application's callback to Read this attribute
//  747     }
//  748   },
//  749   {
//  750     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  751     {  // Attribute record
//  752       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_RETRY,
//  753       ZCL_DATATYPE_UINT16,
//  754       ACCESS_CONTROL_READ,
//  755       NULL // Use application's callback to Read this attribute
//  756     }
//  757   },
//  758   {
//  759     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  760     {  // Attribute record
//  761       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_FAIL,
//  762       ZCL_DATATYPE_UINT16,
//  763       ACCESS_CONTROL_READ,
//  764       NULL // Use application's callback to Read this attribute
//  765     }
//  766   },
//  767   {
//  768     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  769     {  // Attribute record
//  770       ATTRID_DIAGNOSTIC_APS_RX_BCAST,
//  771       ZCL_DATATYPE_UINT16,
//  772       ACCESS_CONTROL_READ,
//  773       NULL // Use application's callback to Read this attribute
//  774     }
//  775   },
//  776   {
//  777     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  778     {  // Attribute record
//  779       ATTRID_DIAGNOSTIC_APS_TX_BCAST,
//  780       ZCL_DATATYPE_UINT16,
//  781       ACCESS_CONTROL_READ,
//  782       NULL // Use application's callback to Read this attribute
//  783     }
//  784   },
//  785   {
//  786     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  787     {  // Attribute record
//  788       ATTRID_DIAGNOSTIC_APS_RX_UCAST,
//  789       ZCL_DATATYPE_UINT16,
//  790       ACCESS_CONTROL_READ,
//  791       NULL // Use application's callback to Read this attribute
//  792     }
//  793   },
//  794   {
//  795     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  796     {  // Attribute record
//  797       ATTRID_DIAGNOSTIC_APS_TX_UCAST_SUCCESS,
//  798       ZCL_DATATYPE_UINT16,
//  799       ACCESS_CONTROL_READ,
//  800       NULL // Use application's callback to Read this attribute
//  801     }
//  802   },
//  803   {
//  804     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  805     {  // Attribute record
//  806       ATTRID_DIAGNOSTIC_APS_TX_UCAST_RETRY,
//  807       ZCL_DATATYPE_UINT16,
//  808       ACCESS_CONTROL_READ,
//  809       NULL // Use application's callback to Read this attribute
//  810     }
//  811   },
//  812   {
//  813     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  814     {  // Attribute record
//  815       ATTRID_DIAGNOSTIC_APS_TX_UCAST_FAIL,
//  816       ZCL_DATATYPE_UINT16,
//  817       ACCESS_CONTROL_READ,
//  818       NULL // Use application's callback to Read this attribute
//  819     }
//  820   },
//  821   {
//  822     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  823     {  // Attribute record
//  824       ATTRID_DIAGNOSTIC_ROUTE_DISC_INITIATED,
//  825       ZCL_DATATYPE_UINT16,
//  826       ACCESS_CONTROL_READ,
//  827       NULL // Use application's callback to Read this attribute
//  828     }
//  829   },
//  830   {
//  831     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  832     {  // Attribute record
//  833       ATTRID_DIAGNOSTIC_NEIGHBOR_ADDED,
//  834       ZCL_DATATYPE_UINT16,
//  835       ACCESS_CONTROL_READ,
//  836       NULL // Use application's callback to Read this attribute
//  837     }
//  838   },
//  839   {
//  840     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  841     {  // Attribute record
//  842       ATTRID_DIAGNOSTIC_NEIGHBOR_REMOVED,
//  843       ZCL_DATATYPE_UINT16,
//  844       ACCESS_CONTROL_READ,
//  845       NULL // Use application's callback to Read this attribute
//  846     }
//  847   },
//  848   {
//  849     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  850     {  // Attribute record
//  851       ATTRID_DIAGNOSTIC_NEIGHBOR_STALE,
//  852       ZCL_DATATYPE_UINT16,
//  853       ACCESS_CONTROL_READ,
//  854       NULL // Use application's callback to Read this attribute
//  855     }
//  856   },
//  857   {
//  858     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  859     {  // Attribute record
//  860       ATTRID_DIAGNOSTIC_JOIN_INDICATION,
//  861       ZCL_DATATYPE_UINT16,
//  862       ACCESS_CONTROL_READ,
//  863       NULL // Use application's callback to Read this attribute
//  864     }
//  865   },
//  866   {
//  867     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  868     {  // Attribute record
//  869       ATTRID_DIAGNOSTIC_CHILD_MOVED,
//  870       ZCL_DATATYPE_UINT16,
//  871       ACCESS_CONTROL_READ,
//  872       NULL // Use application's callback to Read this attribute
//  873     }
//  874   },
//  875   {
//  876     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  877     {  // Attribute record
//  878       ATTRID_DIAGNOSTIC_NWK_FC_FAILURE,
//  879       ZCL_DATATYPE_UINT16,
//  880       ACCESS_CONTROL_READ,
//  881       NULL // Use application's callback to Read this attribute
//  882     }
//  883   },
//  884   {
//  885     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  886     {  // Attribute record
//  887       ATTRID_DIAGNOSTIC_APS_FC_FAILURE,
//  888       ZCL_DATATYPE_UINT16,
//  889       ACCESS_CONTROL_READ,
//  890       NULL // Use application's callback to Read this attribute
//  891     }
//  892   },
//  893   {
//  894     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  895     {  // Attribute record
//  896       ATTRID_DIAGNOSTIC_APS_UNAUTHORIZED_KEY,
//  897       ZCL_DATATYPE_UINT16,
//  898       ACCESS_CONTROL_READ,
//  899       NULL // Use application's callback to Read this attribute
//  900     }
//  901   },
//  902   {
//  903     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  904     {  // Attribute record
//  905       ATTRID_DIAGNOSTIC_NWK_DECRYPT_FAILURES,
//  906       ZCL_DATATYPE_UINT16,
//  907       ACCESS_CONTROL_READ,
//  908       NULL // Use application's callback to Read this attribute
//  909     }
//  910   },
//  911   {
//  912     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  913     {  // Attribute record
//  914       ATTRID_DIAGNOSTIC_APS_DECRYPT_FAILURES,
//  915       ZCL_DATATYPE_UINT16,
//  916       ACCESS_CONTROL_READ,
//  917       NULL // Use application's callback to Read this attribute
//  918     }
//  919   },
//  920   {
//  921     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  922     {  // Attribute record
//  923       ATTRID_DIAGNOSTIC_PACKET_BUFFER_ALLOCATE_FAILURES,
//  924       ZCL_DATATYPE_UINT16,
//  925       ACCESS_CONTROL_READ,
//  926       NULL // Use application's callback to Read this attribute
//  927     }
//  928   },
//  929   {
//  930     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  931     {  // Attribute record
//  932       ATTRID_DIAGNOSTIC_RELAYED_UCAST,
//  933       ZCL_DATATYPE_UINT16,
//  934       ACCESS_CONTROL_READ,
//  935       NULL // Use application's callback to Read this attribute
//  936     }
//  937   },
//  938   {
//  939     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  940     {  // Attribute record
//  941       ATTRID_DIAGNOSTIC_PHY_TO_MAC_QUEUE_LIMIT_REACHED,
//  942       ZCL_DATATYPE_UINT16,
//  943       ACCESS_CONTROL_READ,
//  944       NULL // Use application's callback to Read this attribute
//  945     }
//  946   },
//  947   {
//  948     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  949     {  // Attribute record
//  950       ATTRID_DIAGNOSTIC_PACKET_VALIDATE_DROP_COUNT,
//  951       ZCL_DATATYPE_UINT16,
//  952       ACCESS_CONTROL_READ,
//  953       NULL // Use application's callback to Read this attribute
//  954     }
//  955   },
//  956   {
//  957     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  958     {  // Attribute record
//  959       ATTRID_DIAGNOSTIC_AVERAGE_MAC_RETRY_PER_APS_MESSAGE_SENT,
//  960       ZCL_DATATYPE_UINT16,
//  961       ACCESS_CONTROL_READ,
//  962       NULL // Use application's callback to Read this attribute
//  963     }
//  964   },
//  965   {
//  966     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  967     {  // Attribute record
//  968       ATTRID_DIAGNOSTIC_LAST_MESSAGE_LQI,
//  969       ZCL_DATATYPE_UINT8,
//  970       ACCESS_CONTROL_READ,
//  971       NULL // Use application's callback to Read this attribute
//  972     }
//  973   },
//  974   {
//  975     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  976     {  // Attribute record
//  977       ATTRID_DIAGNOSTIC_LAST_MESSAGE_RSSI,
//  978       ZCL_DATATYPE_INT8,
//  979       ACCESS_CONTROL_READ,
//  980       NULL // Use application's callback to Read this attribute
//  981     }
//  982   },
//  983 #endif // ZCL_DIAGNOSTIC
//  984 };
//  985 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  986 uint8 CONST zha_project_NumAttributes = ( sizeof(zha_project_Attrs) / sizeof(zha_project_Attrs[0]) );
zha_project_NumAttributes:
        DB 45
//  987 
//  988 /*********************************************************************
//  989  * SIMPLE DESCRIPTOR
//  990  */
//  991 // This is the Cluster ID List and should be filled with Application
//  992 // specific cluster IDs.
//  993 #if ZG_BUILD_COORDINATOR_TYPE 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  994 const cId_t zha_project_InClusterList[] =
zha_project_InClusterList:
        DATA16
        DW 0
        DW 5
        DW 4
        DW 6
        DW 1280
        DW 1026
        DW 1029
        DW 1024
        DW 1282
        DW 768
        DW 3
        DW 4
        DW 8
//  995 {
//  996   ZCL_CLUSTER_ID_GEN_BASIC,
//  997   ZCL_CLUSTER_ID_GEN_SCENES,
//  998   ZCL_CLUSTER_ID_GEN_GROUPS,
//  999   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1000   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1001   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
// 1002   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1003   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
// 1004   ZCL_CLUSTER_ID_SS_IAS_WD,
// 1005   ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
// 1006   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1007   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1008 #ifdef ZCL_LEVEL_CTRL
// 1009   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL
// 1010 #endif
// 1011 };
// 1012 // work-around for compiler bug... IAR can't calculate size of array with #if options.
// 1013 #ifdef ZCL_LEVEL_CTRL
// 1014  #define ZCLSAMPLELIGHT_MAX_INCLUSTERS   6
// 1015 #else
// 1016  #define ZCLSAMPLELIGHT_MAX_INCLUSTERS   5
// 1017 #endif
// 1018 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
// 1019 const cId_t zha_project_OutClusterList[] =
zha_project_OutClusterList:
        DATA16
        DW 0
        DW 5
        DW 4
        DW 6
        DW 8
        DW 1280
        DW 1026
        DW 1029
        DW 1024
        DW 1282
        DW 768
        DW 3
        DW 4
// 1020 {
// 1021   ZCL_CLUSTER_ID_GEN_BASIC,
// 1022   ZCL_CLUSTER_ID_GEN_SCENES,
// 1023   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1024   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1025   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1026   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1027   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
// 1028   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1029   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
// 1030   ZCL_CLUSTER_ID_SS_IAS_WD,
// 1031   ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
// 1032   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1033   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1034 };
// 1035 #define ZCLSAMPLELIGHT_MAX_OUTCLUSTERS  (sizeof(zha_project_OutClusterList) / sizeof(zha_project_OutClusterList[0]))
// 1036 

        RSEG XDATA_I:XDATA:NOROOT(0)
// 1037 SimpleDescriptionFormat_t zha_project_SimpleDesc =
zha_project_SimpleDesc:
        DATA8
        DS 12
        REQUIRE `?<Initializer for zha_project_SimpleDesc>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LocationDescript`:
        DATA8
        DB 16
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_DeviceEnable>`:
        DATA8
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_BatteryVoltage>`:
        DATA8
        DB 5

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_BatteryPercent>`:
        DATA8
        DB 30

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelCurrentLeve`:
        DATA8
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOnOffTransi`:
        DATA16
        DW 20

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOnLevel>`:
        DATA8
        DB 126

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOnTransitio`:
        DATA16
        DW 20

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOffTransiti`:
        DATA16
        DW 20

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_SimpleDesc>`:
        DATA8
        DB 1
        DATA16
        DW 260
        DW 257
        DATA8
        DB 0
        DB 6
        DATA16
        DW zha_project_InClusterList
        DATA8
        DB 13
        DATA16
        DW zha_project_OutClusterList

        END
// 1038 {
// 1039   SAMPLELIGHT_ENDPOINT,                  //  int Endpoint;
// 1040   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId;
// 1041 #ifdef ZCL_LEVEL_CTRL
// 1042   ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId;
// 1043 #else
// 1044   ZCL_HA_DEVICEID_ON_OFF_LIGHT,          //  uint16 AppDeviceId;
// 1045 #endif
// 1046   0,            //  int   AppDevVer:4;
// 1047   0,                     //  int   AppFlags:4;
// 1048   ZCLSAMPLELIGHT_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
// 1049   (cId_t *)&zha_project_InClusterList, //  byte *pAppInClusterList;
// 1050   ZCLSAMPLELIGHT_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
// 1051   (cId_t *)&zha_project_OutClusterList //  byte *pAppInClusterList;
// 1052 };
// 1053 #endif
// 1054 
// 1055 
// 1056 
// 1057 
// 1058 #if ZG_BUILD_ENDDEVICE_TYPE
// 1059 
// 1060 const cId_t zclZHAtest_InClusterList1[6] =
// 1061 {
// 1062   ZCL_CLUSTER_ID_GEN_BASIC,
// 1063   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1064   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1065   ZCL_CLUSTER_ID_GEN_SCENES,
// 1066   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1067   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1068   //ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1069   //GENERICAPP_CLUSTERID
// 1070 };
// 1071 
// 1072 const cId_t zclZHAtest_InClusterList2[7] =
// 1073 {
// 1074   ZCL_CLUSTER_ID_GEN_BASIC,
// 1075   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1076   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1077   ZCL_CLUSTER_ID_GEN_SCENES,
// 1078   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1079   ZCL_CLUSTER_ID_GEN_ON_OFF,  
// 1080   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1081 //  GENERICAPP_CLUSTERID
// 1082 };
// 1083 const cId_t zclZHAtest_InClusterList3[8] =
// 1084 {
// 1085   ZCL_CLUSTER_ID_GEN_BASIC,
// 1086   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1087   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1088   ZCL_CLUSTER_ID_GEN_SCENES,
// 1089   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1090   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1091   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1092   ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,  
// 1093 //  GENERICAPP_CLUSTERID
// 1094 };
// 1095 
// 1096 const cId_t zclZHAtest_InClusterList4[5] =
// 1097 {
// 1098   ZCL_CLUSTER_ID_GEN_BASIC,
// 1099   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1100   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1101   ZCL_CLUSTER_ID_GEN_SCENES,
// 1102   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1103   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
// 1104   //ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1105 //  GENERICAPP_CLUSTERID
// 1106 };
// 1107 
// 1108 const cId_t zclZHAtest_InClusterList5[3] =
// 1109 {
// 1110   ZCL_CLUSTER_ID_GEN_BASIC,
// 1111   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1112   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1113 //  GENERICAPP_CLUSTERID
// 1114 };
// 1115 
// 1116 const cId_t zclZHAtest_InClusterList6[5] =
// 1117 {
// 1118   ZCL_CLUSTER_ID_GEN_BASIC,
// 1119   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1120   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1121   ZCL_CLUSTER_ID_GEN_SCENES,
// 1122   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1123   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1124 //  GENERICAPP_CLUSTERID
// 1125 };
// 1126 
// 1127 const cId_t zclZHAtest_InClusterList7[3] =
// 1128 {
// 1129   ZCL_CLUSTER_ID_GEN_BASIC,
// 1130   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1131   ZCL_CLUSTER_ID_SS_IAS_ZONE,  
// 1132 //  GENERICAPP_CLUSTERID
// 1133 };
// 1134 
// 1135 const cId_t zclZHAtest_InClusterList8[5] =
// 1136 {
// 1137   ZCL_CLUSTER_ID_GEN_BASIC,
// 1138   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1139   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1140   ZCL_CLUSTER_ID_GEN_SCENES,
// 1141   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1142   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,  
// 1143 //  GENERICAPP_CLUSTERID
// 1144 };
// 1145 
// 1146 const cId_t zclZHAtest_InClusterList10[3] =
// 1147 {
// 1148   ZCL_CLUSTER_ID_GEN_BASIC,
// 1149   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1150   ZCL_CLUSTER_ID_SS_IAS_ZONE,  
// 1151 //  GENERICAPP_CLUSTERID
// 1152 };
// 1153 
// 1154 const cId_t zclZHAtest_InClusterList9[4] =
// 1155 {
// 1156   ZCL_CLUSTER_ID_GEN_BASIC,
// 1157   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1158   ZCL_CLUSTER_ID_SS_IAS_WD, 
// 1159   ZCL_CLUSTER_ID_SS_IAS_ZONE, 
// 1160 //  GENERICAPP_CLUSTERID
// 1161 };
// 1162 
// 1163 const cId_t zclZHAtest_InClusterList11[3] =
// 1164 {
// 1165   ZCL_CLUSTER_ID_GEN_BASIC,
// 1166   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1167   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1168 //  GENERICAPP_CLUSTERID
// 1169 };
// 1170 
// 1171 const cId_t zclZHAtest_InClusterList14[7] =
// 1172 {
// 1173   ZCL_CLUSTER_ID_GEN_BASIC,
// 1174   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1175   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1176   ZCL_CLUSTER_ID_GEN_SCENES,
// 1177   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1178   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1179   ZCL_CLUSTER_ID_SE_METERING,
// 1180   ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
// 1181  //   GENERICAPP_CLUSTERID
// 1182 };
// 1183 
// 1184 
// 1185 const cId_t zclZHAtest_OutClusterList1[4] =
// 1186 {
// 1187   ZCL_CLUSTER_ID_GEN_BASIC,
// 1188   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1189   ZCL_CLUSTER_ID_GEN_SCENES,
// 1190   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1191   //ZCL_CLUSTER_ID_SS_IAS_ZONE
// 1192  //   GENERICAPP_CLUSTERID
// 1193 };
// 1194 
// 1195 
// 1196 const cId_t zclZHAtest_OutClusterList2[4] =
// 1197 {
// 1198   ZCL_CLUSTER_ID_GEN_BASIC,
// 1199   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1200   ZCL_CLUSTER_ID_GEN_SCENES,
// 1201   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1202  //   GENERICAPP_CLUSTERID
// 1203 };
// 1204 
// 1205 const cId_t zclZHAtest_OutClusterList3[4] =
// 1206 {
// 1207   ZCL_CLUSTER_ID_GEN_BASIC,
// 1208   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1209   ZCL_CLUSTER_ID_GEN_SCENES,
// 1210   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1211  //   GENERICAPP_CLUSTERID
// 1212 };
// 1213 
// 1214 const cId_t zclZHAtest_OutClusterList4[5] =
// 1215 {
// 1216   ZCL_CLUSTER_ID_GEN_BASIC,
// 1217   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1218   ZCL_CLUSTER_ID_GEN_SCENES,
// 1219   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1220   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,  
// 1221  //   GENERICAPP_CLUSTERID
// 1222 };
// 1223 
// 1224 const cId_t zclZHAtest_OutClusterList5[3] =
// 1225 {
// 1226   ZCL_CLUSTER_ID_GEN_BASIC,
// 1227   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1228   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1229  //   GENERICAPP_CLUSTERID
// 1230 };
// 1231 
// 1232 
// 1233 
// 1234 const cId_t zclZHAtest_OutClusterList6[5] =
// 1235 {
// 1236   ZCL_CLUSTER_ID_GEN_BASIC,
// 1237   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1238   ZCL_CLUSTER_ID_GEN_SCENES,
// 1239   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1240   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1241   //GENERICAPP_CLUSTERID
// 1242 };
// 1243 
// 1244 const cId_t zclZHAtest_OutClusterList7[3] =
// 1245 {
// 1246   ZCL_CLUSTER_ID_GEN_BASIC,
// 1247   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1248   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1249   //GENERICAPP_CLUSTERID
// 1250 };
// 1251 
// 1252 const cId_t zclZHAtest_OutClusterList8[5] =
// 1253 {
// 1254   ZCL_CLUSTER_ID_GEN_BASIC,
// 1255   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1256   ZCL_CLUSTER_ID_GEN_SCENES,
// 1257   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1258   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
// 1259  //   GENERICAPP_CLUSTERID
// 1260 };
// 1261 
// 1262 const cId_t zclZHAtest_OutClusterList9[4] =
// 1263 {
// 1264   ZCL_CLUSTER_ID_GEN_BASIC,
// 1265   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1266   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1267   ZCL_CLUSTER_ID_SS_IAS_WD,
// 1268  //   GENERICAPP_CLUSTERID
// 1269 };
// 1270 
// 1271 const cId_t zclZHAtest_OutClusterList10[3] =
// 1272 {
// 1273   ZCL_CLUSTER_ID_GEN_BASIC,
// 1274   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1275   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1276  //   GENERICAPP_CLUSTERID
// 1277 };
// 1278 
// 1279 const cId_t zclZHAtest_OutClusterList11[3] =
// 1280 {
// 1281   ZCL_CLUSTER_ID_GEN_BASIC,
// 1282   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1283   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1284  //   GENERICAPP_CLUSTERID
// 1285 };
// 1286 
// 1287 const cId_t zclZHAtest_OutClusterList14[7] =
// 1288 {
// 1289   ZCL_CLUSTER_ID_GEN_BASIC,
// 1290   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1291   ZCL_CLUSTER_ID_GEN_SCENES,
// 1292   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1293   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1294   ZCL_CLUSTER_ID_SE_METERING,
// 1295   ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
// 1296  //   GENERICAPP_CLUSTERID
// 1297 };
// 1298 
// 1299 
// 1300 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc1 =
// 1301 {
// 1302   1,                  //  int Endpoint;
// 1303   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1304   ZCL_HA_DEVICEID_ON_OFF_LIGHT,        //  uint16 AppDeviceId[2];
// 1305   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1306   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1307   6,         //  byte  AppNumInClusters;
// 1308   (cId_t *)zclZHAtest_InClusterList1, //  byte *pAppInClusterList;
// 1309   4,        //  byte  AppNumInClusters;
// 1310   (cId_t *)zclZHAtest_OutClusterList1 //  byte *pAppInClusterList;
// 1311 };
// 1312 
// 1313 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc2 =
// 1314 {
// 1315   1,                  //  int Endpoint;
// 1316   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1317   ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId[2];
// 1318   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1319   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1320   7,         //  byte  AppNumInClusters;
// 1321   (cId_t *)zclZHAtest_InClusterList2, //  byte *pAppInClusterList;
// 1322   4,        //  byte  AppNumInClusters;
// 1323   (cId_t *)zclZHAtest_OutClusterList2 //  byte *pAppInClusterList;
// 1324 };
// 1325 
// 1326 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc3 =
// 1327 {
// 1328   1,                  //  int Endpoint;
// 1329   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1330   ZCL_HA_DEVICEID_COLORED_DIMMABLE_LIGHT,        //  uint16 AppDeviceId[2];
// 1331   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1332   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1333   8,         //  byte  AppNumInClusters;
// 1334   (cId_t *)zclZHAtest_InClusterList3, //  byte *pAppInClusterList;
// 1335   4,        //  byte  AppNumInClusters;
// 1336   (cId_t *)zclZHAtest_OutClusterList3 //  byte *pAppInClusterList;
// 1337 };
// 1338 
// 1339 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc4 =
// 1340 {
// 1341   1,                  //  int Endpoint;
// 1342   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1343   ZCL_HA_DEVICEID_TEMPERATURE_SENSOR,        //  uint16 AppDeviceId[2];
// 1344   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1345   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1346   5,         //  byte  AppNumInClusters;
// 1347   (cId_t *)zclZHAtest_InClusterList4, //  byte *pAppInClusterList;
// 1348   5,        //  byte  AppNumInClusters;
// 1349   (cId_t *)zclZHAtest_OutClusterList4 //  byte *pAppInClusterList;
// 1350 };
// 1351 
// 1352 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc5 =
// 1353 {
// 1354   1,                  //  int Endpoint;
// 1355   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1356   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1357   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1358   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1359   3,         //  byte  AppNumInClusters;
// 1360   (cId_t *)zclZHAtest_InClusterList5, //  byte *pAppInClusterList;
// 1361   3,        //  byte  AppNumInClusters;
// 1362   (cId_t *)zclZHAtest_OutClusterList5 //  byte *pAppInClusterList;
// 1363 };
// 1364 
// 1365 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc6 =
// 1366 {
// 1367   1,                  //  int Endpoint;
// 1368   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1369   0x0307,        //  uint16 AppDeviceId[2];
// 1370   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1371   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1372   5,         //  byte  AppNumInClusters;
// 1373   (cId_t *)zclZHAtest_InClusterList6, //  byte *pAppInClusterList;
// 1374   5,        //  byte  AppNumInClusters;
// 1375   (cId_t *)zclZHAtest_OutClusterList6 //  byte *pAppInClusterList;
// 1376 };
// 1377 
// 1378 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc7 =
// 1379 {
// 1380   1,                  //  int Endpoint;
// 1381   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1382   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1383   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1384   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1385   3,         //  byte  AppNumInClusters;
// 1386   (cId_t *)zclZHAtest_InClusterList7, //  byte *pAppInClusterList;
// 1387   3,        //  byte  AppNumInClusters;
// 1388   (cId_t *)zclZHAtest_OutClusterList7 //  byte *pAppInClusterList;
// 1389 };
// 1390 
// 1391 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc8 =
// 1392 {
// 1393   1,                  //  int Endpoint;
// 1394   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1395   0x0308,        //  uint16 AppDeviceId[2];
// 1396   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1397   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1398   5,         //  byte  AppNumInClusters;
// 1399   (cId_t *)zclZHAtest_InClusterList8, //  byte *pAppInClusterList;
// 1400   5,        //  byte  AppNumInClusters;
// 1401   (cId_t *)zclZHAtest_OutClusterList8 //  byte *pAppInClusterList;
// 1402 };
// 1403 
// 1404 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc9 =
// 1405 {
// 1406   1,                  //  int Endpoint;
// 1407   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1408   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1409   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1410   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1411   4,         //  byte  AppNumInClusters;
// 1412   (cId_t *)zclZHAtest_InClusterList9, //  byte *pAppInClusterList;
// 1413   4,        //  byte  AppNumInClusters;
// 1414   (cId_t *)zclZHAtest_OutClusterList9 //  byte *pAppInClusterList;
// 1415 };
// 1416 
// 1417 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc10 =
// 1418 {
// 1419   1,                  //  int Endpoint;
// 1420   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1421   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1422   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1423   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1424   3,         //  byte  AppNumInClusters;
// 1425   (cId_t *)zclZHAtest_InClusterList10, //  byte *pAppInClusterList;
// 1426   3,        //  byte  AppNumInClusters;
// 1427   (cId_t *)zclZHAtest_OutClusterList10 //  byte *pAppInClusterList;
// 1428 };
// 1429 
// 1430 
// 1431 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc11 =
// 1432 {
// 1433   1,                  //  int Endpoint;
// 1434   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1435   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1436   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1437   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1438   3,         //  byte  AppNumInClusters;
// 1439   (cId_t *)zclZHAtest_InClusterList11, //  byte *pAppInClusterList;
// 1440   3,        //  byte  AppNumInClusters;
// 1441   (cId_t *)zclZHAtest_OutClusterList11 //  byte *pAppInClusterList;
// 1442 };
// 1443 
// 1444 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc12 =
// 1445 {
// 1446   1,                  //  int Endpoint;
// 1447   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1448   ZCL_HA_DEVICEID_ON_OFF_LIGHT_SWITCH,        //  uint16 AppDeviceId[2];
// 1449   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1450   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1451   4,         //  byte  AppNumInClusters;
// 1452   (cId_t *)zclZHAtest_OutClusterList1, //  byte *pAppInClusterList;
// 1453   6,        //  byte  AppNumInClusters;
// 1454   (cId_t *)zclZHAtest_InClusterList1 //  byte *pAppInClusterList;
// 1455 };
// 1456 
// 1457 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc14 =
// 1458 {
// 1459   1,                                    //  int Endpoint;
// 1460   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1461   0x0202,                           //  uint16 AppDeviceId[2];
// 1462   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1463   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1464   7,                                //  byte  AppNumInClusters;
// 1465   (cId_t *)zclZHAtest_InClusterList14, //  byte *pAppInClusterList;
// 1466   7,                                //  byte  AppNumInClusters;
// 1467   (cId_t *)zclZHAtest_OutClusterList14 //  byte *pAppInClusterList;
// 1468 };
// 1469 
// 1470 
// 1471 #endif
// 1472 /*********************************************************************
// 1473  * GLOBAL FUNCTIONS
// 1474  */
// 1475 
// 1476 /*********************************************************************
// 1477  * LOCAL FUNCTIONS
// 1478  */
// 1479 
// 1480 /****************************************************************************
// 1481 ****************************************************************************/
// 1482 
// 1483 
// 
// 361 bytes in segment CODE_C
//  40 bytes in segment XDATA_I
//  40 bytes in segment XDATA_ID
// 106 bytes in segment XDATA_ROM_C
//  29 bytes in segment XDATA_Z
// 
// 401 bytes of CODE  memory
// 106 bytes of CONST memory
//  69 bytes of XDATA memory
//
//Errors: none
//Warnings: none
