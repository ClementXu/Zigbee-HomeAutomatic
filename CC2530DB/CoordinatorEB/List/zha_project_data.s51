///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.1.3056 for 8051               28/Sep/2016  00:06:44
// Copyright 2004-2015 IAR Systems AB.
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\Source\zha_project_data.c
//    Command line       =  
//        -f "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=10000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\Source\zha_project_data.c"
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        HOLD_AUTO_START -D xBUILD_ALL_DEVICES -D HAL_UART=TRUE -D xZTOOL_P1
//        -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
//        xLCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
//        ZCL_WRITE -D ZCL_REPORT -D ZCL_EZMODE -D ZCL_BASIC -D ZCL_IDENTIFY -D
//        ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS -D ZCL_LEVEL_CTRL -D ZCL_WD -D
//        ZCL_DIAGNOSTIC -D FEATURE_SYSTEM_STATS -D
//        DEVICE_LOGICAL_TYPE=ZG_DEVICETYPE_COORDINATOR -lC "C:\Texas
//        Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\List"
//        -lA "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\List"
//        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -I "C:\Texas
//        Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\Source\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\Source\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz
//    List file          =  
//        C:\Texas Instruments\Z-Stack Home
//        1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\CC2530DB\CoordinatorEB\List\zha_project_data.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zha_project_data

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC zha_project_Alarm_Status
        PUBLIC zha_project_Alarm_Type
        PUBLIC zha_project_Attrs
        PUBLIC zha_project_BatteryPercent
        PUBLIC zha_project_BatteryVoltage
        PUBLIC zha_project_DateCode
        PUBLIC zha_project_DeviceEnable
        PUBLIC zha_project_HUE_Status
        PUBLIC zha_project_HWRevision
        PUBLIC zha_project_Humidity_Value
        PUBLIC zha_project_IdentifyCommissionState
        PUBLIC zha_project_IdentifyTime
        PUBLIC zha_project_Illumiance_Value
        PUBLIC zha_project_InClusterList
        PUBLIC zha_project_LevelCurrentLevel
        PUBLIC zha_project_LevelDefaultMoveRate
        PUBLIC zha_project_LevelOffTransitionTime
        PUBLIC zha_project_LevelOnLevel
        PUBLIC zha_project_LevelOnOffTransitionTime
        PUBLIC zha_project_LevelOnTransitionTime
        PUBLIC zha_project_LevelRemainingTime
        PUBLIC zha_project_Level_to_Level
        PUBLIC zha_project_Light_Color_Status
        PUBLIC zha_project_LocationDescription
        PUBLIC zha_project_ManufacturerName
        PUBLIC zha_project_ModelId
        PUBLIC zha_project_NumAttributes
        PUBLIC zha_project_OnOff
        PUBLIC zha_project_OutClusterList
        PUBLIC zha_project_PhysicalEnvironment
        PUBLIC zha_project_PowerSource
        PUBLIC zha_project_Saturation
        PUBLIC zha_project_SimpleDesc
        PUBLIC zha_project_Smoke_Type
        PUBLIC zha_project_Temperature_Value
        PUBLIC zha_project_WD_Duration
        PUBLIC zha_project_WD_SQUAWK
        PUBLIC zha_project_Warning
        PUBLIC zha_project_ZCLVersion
        EXTERN SerialNumber

// C:\Texas Instruments\Z-Stack Home 1.2.2a.44539\Projects\zstack\HomeAutomation\Zigbee-HomeAutomatic\Source\zha_project_data.c
//    1 /**************************************************************************************************
//    2   Filename:       zha_project_data.c
//    3   Revised:        $Date: 2014-05-12 13:14:02 -0700 (Mon, 12 May 2014) $
//    4   Revision:       $Revision: 38502 $
//    5 
//    6 
//    7   Description:    Zigbee Cluster Library - sample device application.
//    8 
//    9 
//   10   Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License").  You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product.  Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "OSAL.h"
//   46 #include "AF.h"
//   47 #include "ZDConfig.h"
//   48 
//   49 #include "zcl.h"
//   50 #include "zcl_general.h"
//   51 #include "zcl_ha.h"
//   52 #include "zcl_ss.h"
//   53 #include "zcl_se.h"
//   54 #include "zcl_ms.h"
//   55 #include "zcl_lighting.h"
//   56 #include "zcl_ezmode.h"
//   57 #include "zcl_poll_control.h"
//   58 #include "zcl_electrical_measurement.h"
//   59 #include "zcl_diagnostic.h"
//   60 #include "zcl_meter_identification.h"
//   61 #include "zcl_appliance_identification.h"
//   62 #include "zcl_appliance_events_alerts.h"
//   63 #include "zcl_power_profile.h"
//   64 #include "zcl_appliance_control.h"
//   65 #include "zcl_appliance_statistics.h"
//   66 #include "zcl_hvac.h"
//   67 #include "ZGlobals.h"
//   68 #include "zha_project.h"
//   69 
//   70 /*********************************************************************
//   71  * CONSTANTS
//   72  */
//   73 
//   74 #define zha_project_DEVICE_VERSION     0
//   75 #define zha_project_FLAGS              0
//   76 
//   77 #define SAMPLELIGHT_HWVERSION          1
//   78 #define SAMPLELIGHT_ZCLVERSION         1
//   79 
//   80 /*********************************************************************
//   81  * TYPEDEFS
//   82  */
//   83 
//   84 /*********************************************************************
//   85  * MACROS
//   86  */
//   87 
//   88 /*********************************************************************
//   89  * GLOBAL VARIABLES
//   90  */
//   91 
//   92 // Basic Cluster

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   93 const uint8 zha_project_HWRevision = SAMPLELIGHT_HWVERSION;
zha_project_HWRevision:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   94 const uint8 zha_project_ZCLVersion = SAMPLELIGHT_ZCLVERSION;
zha_project_ZCLVersion:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   95 const uint8 zha_project_ManufacturerName[] = { 7, 'T','e','s','t','0','0','1' };
zha_project_ManufacturerName:
        DB 7
        DB 84
        DB 101
        DB 115
        DB 116
        DB 48
        DB 48
        DB 49

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   96 const uint8 zha_project_ModelId[] = { 16, 'T','I','0','0','0','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
zha_project_ModelId:
        DB 16
        DB 84
        DB 73
        DB 48
        DB 48
        DB 48
        DB 49
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   97 const uint8 zha_project_DateCode[] = { 16, '2','0','0','6','0','8','3','1',' ',' ',' ',' ',' ',' ',' ',' ' };
zha_project_DateCode:
        DB 16
        DB 50
        DB 48
        DB 48
        DB 54
        DB 48
        DB 56
        DB 51
        DB 49
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   98 const uint8 zha_project_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
zha_project_PowerSource:
        DB 1
//   99 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  100 uint8 zha_project_LocationDescription[17] = { 16, ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
zha_project_LocationDescription:
        DATA8
        DS 17
        REQUIRE `?<Initializer for zha_project_LocationDescript`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  101 uint8 zha_project_PhysicalEnvironment = 0;
zha_project_PhysicalEnvironment:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  102 uint8 zha_project_DeviceEnable = DEVICE_ENABLED;
zha_project_DeviceEnable:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_DeviceEnable>`
        REQUIRE __INIT_XDATA_I
//  103 
//  104 // Identify Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  105 uint16 zha_project_IdentifyTime = 0;
zha_project_IdentifyTime:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  106 #ifdef ZCL_EZMODE

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  107 uint8  zha_project_IdentifyCommissionState;
zha_project_IdentifyCommissionState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  108 #endif

        RSEG XDATA_I:XDATA:NOROOT(0)
//  109 uint8 zha_project_BatteryVoltage=5;
zha_project_BatteryVoltage:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_BatteryVoltage>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  110 uint8 zha_project_BatteryPercent=30;
zha_project_BatteryPercent:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_BatteryPercent>`
        REQUIRE __INIT_XDATA_I
//  111 
//  112 
//  113 // On/Off Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  114 uint8  zha_project_OnOff = LIGHT_OFF;
zha_project_OnOff:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  115 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  116 uint8  zha_project_Level_to_Level = 0;
zha_project_Level_to_Level:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  117 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  118 uint16 zha_project_Alarm_Status=0;
zha_project_Alarm_Status:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  119 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  120 uint16 zha_project_Alarm_Type=0x00;
zha_project_Alarm_Type:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  121 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  122 uint16 zha_project_Smoke_Type=0x00;
zha_project_Smoke_Type:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  123 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  124 uint16 zha_project_Light_Color_Status=0x0000;
zha_project_Light_Color_Status:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  125 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  126 int16 zha_project_Temperature_Value=0x0000;
zha_project_Temperature_Value:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  127 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  128 uint16 zha_project_Humidity_Value=0x00;
zha_project_Humidity_Value:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  129 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  130 uint16 zha_project_Illumiance_Value=0x0000;
zha_project_Illumiance_Value:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  131 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  132 uint8 zha_project_Saturation=0x00;
zha_project_Saturation:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  133 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  134 uint16 zha_project_HUE_Status;
zha_project_HUE_Status:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  135 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  136 uint8 zha_project_WD_Duration;
zha_project_WD_Duration:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  137 uint8 zha_project_Warning;
zha_project_Warning:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  138 uint8 zha_project_WD_SQUAWK;
zha_project_WD_SQUAWK:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  139 extern uint8 SerialNumber[];
//  140 
//  141 // Level Control Cluster
//  142 #ifdef ZCL_LEVEL_CTRL

        RSEG XDATA_I:XDATA:NOROOT(0)
//  143 uint8  zha_project_LevelCurrentLevel = ATTR_LEVEL_MIN_LEVEL;
zha_project_LevelCurrentLevel:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_LevelCurrentLeve`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  144 uint16 zha_project_LevelRemainingTime;
zha_project_LevelRemainingTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  145 uint16 zha_project_LevelOnOffTransitionTime = 20;
zha_project_LevelOnOffTransitionTime:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zha_project_LevelOnOffTransi`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  146 uint8  zha_project_LevelOnLevel = ATTR_LEVEL_MID_LEVEL;
zha_project_LevelOnLevel:
        DATA8
        DS 1
        REQUIRE `?<Initializer for zha_project_LevelOnLevel>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  147 uint16 zha_project_LevelOnTransitionTime = 20;
zha_project_LevelOnTransitionTime:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zha_project_LevelOnTransitio`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  148 uint16 zha_project_LevelOffTransitionTime = 20;
zha_project_LevelOffTransitionTime:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zha_project_LevelOffTransiti`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  149 uint8  zha_project_LevelDefaultMoveRate = 0;   // as fast as possible
zha_project_LevelDefaultMoveRate:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  150 #endif
//  151 
//  152 #if ZCL_DISCOVER
//  153 CONST zclCommandRec_t zha_project_Cmds[] =
//  154 {
//  155   {
//  156     ZCL_CLUSTER_ID_GEN_BASIC,
//  157     COMMAND_BASIC_RESET_FACT_DEFAULT,
//  158     CMD_DIR_SERVER_RECEIVED
//  159   },
//  160   {
//  161     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  162     COMMAND_OFF,
//  163     CMD_DIR_SERVER_RECEIVED
//  164   },
//  165   {
//  166     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  167     COMMAND_ON,
//  168     CMD_DIR_SERVER_RECEIVED
//  169   },
//  170   {
//  171     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  172     COMMAND_TOGGLE,
//  173     CMD_DIR_SERVER_RECEIVED
//  174   },
//  175 #ifdef ZCL_LEVEL_CONTROL
//  176   ,{
//  177     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  178     COMMAND_LEVEL_MOVE_TO_LEVEL,
//  179     CMD_DIR_SERVER_RECEIVED
//  180   },
//  181   {
//  182     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  183     COMMAND_LEVEL_MOVE,
//  184     CMD_DIR_SERVER_RECEIVED
//  185   },
//  186   {
//  187     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  188     COMMAND_LEVEL_STEP,
//  189     CMD_DIR_SERVER_RECEIVED
//  190   },
//  191   {
//  192     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  193     COMMAND_LEVEL_STOP,
//  194     CMD_DIR_SERVER_RECEIVED
//  195   },
//  196   {
//  197     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  198     COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF,
//  199     CMD_DIR_SERVER_RECEIVED
//  200   },
//  201   {
//  202     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  203     COMMAND_LEVEL_MOVE_WITH_ON_OFF,
//  204     CMD_DIR_SERVER_RECEIVED
//  205   },
//  206   {
//  207     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  208     COMMAND_LEVEL_STEP_WITH_ON_OFF,
//  209     CMD_DIR_SERVER_RECEIVED
//  210   },
//  211   {
//  212     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  213     COMMAND_LEVEL_STOP_WITH_ON_OFF,
//  214     CMD_DIR_SERVER_RECEIVED
//  215   }
//  216 #endif // ZCL_LEVEL_CONTROL
//  217 };
//  218 
//  219 CONST uint8 zclCmdsArraySize = ( sizeof(zha_project_Cmds) / sizeof(zha_project_Cmds[0]) );
//  220 #endif // ZCL_DISCOVER
//  221 
//  222 /*********************************************************************
//  223  * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
//  224  */

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  225 CONST zclAttrRec_t zha_project_Attrs[] =
zha_project_Attrs:
        DATA16
        DW 0
        DW 3
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_HWRevision
        DW 0
        DW 0
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_ZCLVersion
        DW 0
        DW 4
        DATA8
        DB 66
        DB 1
        DATA16
        DW zha_project_ManufacturerName
        DW 0
        DW 5
        DATA8
        DB 66
        DB 1
        DATA16
        DW zha_project_ModelId
        DW 0
        DW 6
        DATA8
        DB 66
        DB 1
        DATA16
        DW zha_project_DateCode
        DW 0
        DW 7
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_PowerSource
        DW 0
        DW 16
        DATA8
        DB 66
        DB 3
        DATA16
        DW zha_project_LocationDescription
        DW 0
        DW 9
        DATA8
        DB 66
        DB 1
        DATA16
        DW SerialNumber
        DW 0
        DW 17
        DATA8
        DB 32
        DB 3
        DATA16
        DW zha_project_PhysicalEnvironment
        DW 0
        DW 18
        DATA8
        DB 16
        DB 3
        DATA16
        DW zha_project_DeviceEnable
        DW 1
        DW 32
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_BatteryPercent
        DW 1
        DW 33
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_BatteryVoltage
        DW 3
        DW 0
        DATA8
        DB 33
        DB 3
        DATA16
        DW zha_project_IdentifyTime
        DW 3
        DW 1
        DATA8
        DB 32
        DB 1
        DATA16
        DW zha_project_IdentifyCommissionState
        DW 2821
        DW 0
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 1
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 256
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 257
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 258
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 259
        DATA8
        DB 35
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 260
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 261
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 262
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 263
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 264
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 265
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 266
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 267
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 268
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 269
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 270
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 271
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 272
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 273
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 274
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 275
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 276
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 277
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 278
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 279
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 280
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 281
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 282
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 283
        DATA8
        DB 33
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 284
        DATA8
        DB 32
        DB 1
        DATA16
        DW 0H
        DW 2821
        DW 285
        DATA8
        DB 40
        DB 1
        DATA16
        DW 0H
//  226 {
//  227   // *** General Basic Cluster Attributes ***
//  228   {
//  229     ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
//  230     {  // Attribute record
//  231       ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
//  232       ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
//  233       ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
//  234       (void *)&zha_project_HWRevision  // Pointer to attribute variable
//  235     }
//  236   },
//  237   {
//  238     ZCL_CLUSTER_ID_GEN_BASIC,
//  239     { // Attribute record
//  240       ATTRID_BASIC_ZCL_VERSION,
//  241       ZCL_DATATYPE_UINT8,
//  242       ACCESS_CONTROL_READ,
//  243       (void *)&zha_project_ZCLVersion
//  244     }
//  245   },
//  246   {
//  247     ZCL_CLUSTER_ID_GEN_BASIC,
//  248     { // Attribute record
//  249       ATTRID_BASIC_MANUFACTURER_NAME,
//  250       ZCL_DATATYPE_CHAR_STR,
//  251       ACCESS_CONTROL_READ,
//  252       (void *)zha_project_ManufacturerName
//  253     }
//  254   },
//  255   {
//  256     ZCL_CLUSTER_ID_GEN_BASIC,
//  257     { // Attribute record
//  258       ATTRID_BASIC_MODEL_ID,
//  259       ZCL_DATATYPE_CHAR_STR,
//  260       ACCESS_CONTROL_READ,
//  261       (void *)zha_project_ModelId
//  262     }
//  263   },
//  264   {
//  265     ZCL_CLUSTER_ID_GEN_BASIC,
//  266     { // Attribute record
//  267       ATTRID_BASIC_DATE_CODE,
//  268       ZCL_DATATYPE_CHAR_STR,
//  269       ACCESS_CONTROL_READ,
//  270       (void *)zha_project_DateCode
//  271     }
//  272   },
//  273   {
//  274     ZCL_CLUSTER_ID_GEN_BASIC,
//  275     { // Attribute record
//  276       ATTRID_BASIC_POWER_SOURCE,
//  277       ZCL_DATATYPE_UINT8,
//  278       ACCESS_CONTROL_READ,
//  279       (void *)&zha_project_PowerSource
//  280     }
//  281   },
//  282   {
//  283     ZCL_CLUSTER_ID_GEN_BASIC,
//  284     { // Attribute record
//  285       ATTRID_BASIC_LOCATION_DESC,
//  286       ZCL_DATATYPE_CHAR_STR,
//  287       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  288       (void *)zha_project_LocationDescription
//  289     }
//  290   },
//  291     {
//  292     ZCL_CLUSTER_ID_GEN_BASIC,
//  293     { // Attribute record
//  294       ATTRID_BASIC_SERIAL_NUMBER,
//  295       ZCL_DATATYPE_CHAR_STR,
//  296       ACCESS_CONTROL_READ,
//  297       (void *)&SerialNumber
//  298     }
//  299   },
//  300   
//  301   {
//  302     ZCL_CLUSTER_ID_GEN_BASIC,
//  303     { // Attribute record
//  304       ATTRID_BASIC_PHYSICAL_ENV,
//  305       ZCL_DATATYPE_UINT8,
//  306       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  307       (void *)&zha_project_PhysicalEnvironment
//  308     }
//  309   },
//  310   {
//  311     ZCL_CLUSTER_ID_GEN_BASIC,
//  312     { // Attribute record
//  313       ATTRID_BASIC_DEVICE_ENABLED,
//  314       ZCL_DATATYPE_BOOLEAN,
//  315       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  316       (void *)&zha_project_DeviceEnable
//  317     }
//  318   },
//  319   // ***Power Configuration Cluster Attributes***
//  320    {
//  321     ZCL_CLUSTER_ID_GEN_POWER_CFG,
//  322     { // Attribute record
//  323       ATTRID_POWER_CFG_BATTERY_VOLTAGE,
//  324       ZCL_DATATYPE_UINT8,
//  325       ACCESS_CONTROL_READ,
//  326       (void *)&zha_project_BatteryPercent
//  327     }
//  328   },
//  329    {
//  330     ZCL_CLUSTER_ID_GEN_POWER_CFG,
//  331     { // Attribute record
//  332       0x0021,
//  333       ZCL_DATATYPE_UINT8,
//  334       ACCESS_CONTROL_READ,
//  335       (void *)&zha_project_BatteryVoltage
//  336     }
//  337   },
//  338 #ifdef ZCL_IDENTIFY
//  339   // *** Identify Cluster Attribute ***
//  340   {
//  341     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  342     { // Attribute record
//  343       ATTRID_IDENTIFY_TIME,
//  344       ZCL_DATATYPE_UINT16,
//  345       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  346       (void *)&zha_project_IdentifyTime
//  347     }
//  348   },
//  349  #ifdef ZCL_EZMODE
//  350   // *** Identify Cluster Attribute ***
//  351   {
//  352     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  353     { // Attribute record
//  354       ATTRID_IDENTIFY_COMMISSION_STATE,
//  355       ZCL_DATATYPE_UINT8,
//  356       (ACCESS_CONTROL_READ),
//  357       (void *)&zha_project_IdentifyCommissionState
//  358     }
//  359   },
//  360  #endif // ZCL_EZMODE
//  361 #endif
//  362 
//  363   
//  364 #if ZG_BUILD_ENDDEVICE_TYPE  
//  365   // *** On/Off Cluster Attributes ***
//  366   {
//  367     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  368     { // Attribute record
//  369       ATTRID_ON_OFF,
//  370       ZCL_DATATYPE_BOOLEAN,
//  371       ACCESS_CONTROL_READ,
//  372       (void *)&zha_project_OnOff
//  373     }
//  374   },
//  375     // *** Level Cluster Attributes ***
//  376   {
//  377     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  378     { // Attribute record
//  379       ATTRID_LEVEL_CURRENT_LEVEL,
//  380       ZCL_DATATYPE_UINT16,
//  381       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  382       (void *)&zha_project_Level_to_Level
//  383     }
//  384   },
//  385   
//  386       // *** Level Cluster Attributes ***
//  387   {
//  388     ZCL_CLUSTER_ID_SS_IAS_ZONE,
//  389     { // Attribute record
//  390       ATTRID_SS_IAS_ZONE_STATUS,
//  391       ZCL_DATATYPE_BITMAP16,
//  392       ACCESS_CONTROL_READ ,
//  393       (void *)&zha_project_Alarm_Status
//  394     }
//  395   },
//  396   
//  397 
//  398   {
//  399     ZCL_CLUSTER_ID_SS_IAS_ZONE,
//  400     { // Attribute record
//  401       ATTRID_SS_IAS_ZONE_TYPE,
//  402       ZCL_DATATYPE_ENUM16,
//  403       ACCESS_CONTROL_READ ,
//  404       (void *)&zha_project_Smoke_Type
//  405     }
//  406   },
//  407     {
//  408     ZCL_CLUSTER_ID_SS_IAS_WD,
//  409     { // Attribute record
//  410       COMMAND_SS_IAS_WD_START_WARNING,
//  411       ZCL_DATATYPE_UINT8,
//  412       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  413       (void *)&zha_project_Warning
//  414     }
//  415   },
//  416     {
//  417     ZCL_CLUSTER_ID_SS_IAS_WD,
//  418     { // Attribute record
//  419       ATTRID_SS_IAS_WD_MAXIMUM_DURATION,
//  420       ZCL_DATATYPE_UINT8,
//  421       ACCESS_CONTROL_READ ,
//  422       (void *)&zha_project_WD_Duration
//  423     }
//  424   },
//  425     {
//  426     ZCL_CLUSTER_ID_SS_IAS_WD,
//  427     { // Attribute record
//  428       COMMAND_SS_IAS_WD_SQUAWK,
//  429       ZCL_DATATYPE_UINT8,
//  430       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  431       (void *)&zha_project_WD_SQUAWK
//  432     }
//  433   },  
//  434     {
//  435     ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  436     { // Attribute record
//  437       ATTRID_LIGHTING_COLOR_CONTROL_COLOR_TEMPERATURE,
//  438       ZCL_DATATYPE_UINT16,
//  439       ACCESS_CONTROL_READ ,
//  440       (void *)&zha_project_Light_Color_Status
//  441     }
//  442   },
//  443   {
//  444     ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  445     { // Attribute record
//  446       ATTRID_LIGHTING_COLOR_CONTROL_CURRENT_HUE,
//  447       ZCL_DATATYPE_UINT16,
//  448       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  449       (void *)&zha_project_HUE_Status
//  450     }
//  451   },
//  452   {
//  453     ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
//  454     { // Attribute record
//  455       ATTRID_LIGHTING_COLOR_CONTROL_CURRENT_SATURATION,
//  456       ZCL_DATATYPE_UINT8,
//  457       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  458       (void *)&zha_project_Saturation
//  459     }
//  460   },
//  461   {
//  462     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  463     { // Attribute record
//  464       ATTRID_MS_TEMPERATURE_MEASURED_VALUE,
//  465       ZCL_DATATYPE_INT16,
//  466       ACCESS_CONTROL_READ ,
//  467       (void *)&zha_project_Temperature_Value
//  468     }
//  469   },
//  470     {
//  471     ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
//  472     { // Attribute record
//  473       ATTRID_MS_RELATIVE_HUMIDITY_MEASURED_VALUE,
//  474       ZCL_DATATYPE_UINT16,
//  475       ACCESS_CONTROL_READ ,
//  476       (void *)&zha_project_Humidity_Value
//  477     }
//  478   },
//  479   {
//  480     ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
//  481     { // Attribute record
//  482       ATTRID_MS_ILLUMINANCE_MEASURED_VALUE,
//  483       ZCL_DATATYPE_UINT16,
//  484       ACCESS_CONTROL_READ ,
//  485       (void *)&zha_project_Illumiance_Value
//  486     }
//  487   },
//  488 #endif 
//  489 #if 0 
//  490 //Outlet Attributes
//  491   {
//  492     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  493     { 
//  494       ATTRID_SE_CURRENT_SUMMATION_DELIVERED,
//  495       ZCL_DATATYPE_UINT32,
//  496       ACCESS_CONTROL_READ ,
//  497       (void *)&zha_project_Illumiance_Value
//  498     }
//  499   },
//  500 
//  501   {
//  502     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  503     { 
//  504       ATTRID_MASK_SE_METER_STATUS,
//  505       ZCL_DATATYPE_UINT16,
//  506       ACCESS_CONTROL_READ ,
//  507       (void *)&zha_project_Illumiance_Value
//  508     }
//  509   },
//  510   
//  511    {
//  512     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  513     { 
//  514       ATTRID_MASK_SE_FORMATTING,
//  515       ZCL_DATATYPE_UINT16,
//  516       ACCESS_CONTROL_READ ,
//  517       (void *)&zha_project_Illumiance_Value
//  518     }
//  519   },
//  520    {
//  521     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  522     { 
//  523       ATTRID_MASK_SE_FORMATTING,
//  524       ZCL_DATATYPE_UINT16,
//  525       ACCESS_CONTROL_READ ,
//  526       (void *)&zha_project_Illumiance_Value
//  527     }
//  528   },
//  529    {
//  530     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  531     { 
//  532       ATTRID_SE_MULTIPLIER,
//  533       ZCL_DATATYPE_UINT16,
//  534       ACCESS_CONTROL_READ ,
//  535       (void *)&zha_project_Illumiance_Value
//  536     }
//  537   },
//  538    {
//  539     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  540     { 
//  541       ATTRID_SE_DIVISOR,
//  542       ZCL_DATATYPE_UINT16,
//  543       ACCESS_CONTROL_READ ,
//  544       (void *)&zha_project_Illumiance_Value
//  545     }
//  546   },
//  547    {
//  548     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  549     { 
//  550       ATTRID_SE_SUMMATION_FORMATTING,
//  551       ZCL_DATATYPE_UINT16,
//  552       ACCESS_CONTROL_READ ,
//  553       (void *)&zha_project_Illumiance_Value
//  554     }
//  555   },  
//  556    {
//  557     ZCL_CLUSTER_ID_SE_SIMPLE_METERING,
//  558     { 
//  559       ATTRID_SE_METERING_DEVICE_TYPE,
//  560       ZCL_DATATYPE_UINT16,
//  561       ACCESS_CONTROL_READ ,
//  562       (void *)&zha_project_Illumiance_Value
//  563     }
//  564   },    
//  565   
//  566   
//  567   {
//  568     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  569     { 
//  570       ATTRID_ELECTRICAL_MEASUREMENT_MEASUREMENT_TYPE,
//  571       ZCL_DATATYPE_BITMAP32,
//  572       ACCESS_CONTROL_READ ,
//  573       (void *)&zha_project_Illumiance_Value
//  574     }
//  575   },
//  576   {
//  577     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  578     { 
//  579       ATTRID_ELECTRICAL_MEASUREMENT_RMS_VOLTAGE,
//  580       ZCL_DATATYPE_UINT16,
//  581       ACCESS_CONTROL_READ ,
//  582       (void *)&zha_project_Illumiance_Value
//  583     }
//  584   },
//  585   {
//  586     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  587     { 
//  588       ATTRID_ELECTRICAL_MEASUREMENT_RMS_CURRENT,
//  589       ZCL_DATATYPE_UINT16,
//  590       ACCESS_CONTROL_READ ,
//  591       (void *)&zha_project_Illumiance_Value
//  592     }
//  593   },
//  594     {
//  595     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  596     { 
//  597       ATTRID_ELECTRICAL_MEASUREMENT_ACTIVE_POWER,
//  598       ZCL_DATATYPE_INT16,
//  599       ACCESS_CONTROL_READ ,
//  600       (void *)&zha_project_Illumiance_Value
//  601     }
//  602     },
//  603     {
//  604     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  605     { 
//  606       ATTRID_ELECTRICAL_MEASUREMENT_POWER_FACTOR,
//  607       ZCL_DATATYPE_INT8,
//  608       ACCESS_CONTROL_READ ,
//  609       (void *)&zha_project_Illumiance_Value
//  610     }
//  611     },
//  612     {
//  613     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  614     { 
//  615       ATTRID_ELECTRICAL_MEASUREMENT_AC_VOLTAGE_MULTIPLIER,
//  616       ZCL_DATATYPE_UINT16,
//  617       ACCESS_CONTROL_READ ,
//  618       (void *)&zha_project_Illumiance_Value
//  619     }
//  620     },
//  621     {
//  622     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  623     { 
//  624       ATTRID_ELECTRICAL_MEASUREMENT_AC_VOLTAGE_DIVISOR,
//  625       ZCL_DATATYPE_UINT16,
//  626       ACCESS_CONTROL_READ ,
//  627       (void *)&zha_project_Illumiance_Value
//  628     }
//  629     },
//  630     {
//  631     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  632     { 
//  633       ATTRID_ELECTRICAL_MEASUREMENT_AC_CURRENT_MULTIPLIER,
//  634       ZCL_DATATYPE_UINT16,
//  635       ACCESS_CONTROL_READ ,
//  636       (void *)&zha_project_Illumiance_Value
//  637     }
//  638     },
//  639     {
//  640     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  641     { 
//  642       ATTRID_ELECTRICAL_MEASUREMENT_AC_CURRENT_DIVISOR,
//  643       ZCL_DATATYPE_UINT16,
//  644       ACCESS_CONTROL_READ ,
//  645       (void *)&zha_project_Illumiance_Value
//  646     }
//  647     },
//  648     {
//  649     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  650     { 
//  651       ATTRID_ELECTRICAL_MEASUREMENT_AC_POWER_MULTIPLIER,
//  652       ZCL_DATATYPE_UINT16,
//  653       ACCESS_CONTROL_READ ,
//  654       (void *)&zha_project_Illumiance_Value
//  655     }
//  656     },
//  657     {
//  658     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  659     { 
//  660       ATTRID_ELECTRICAL_MEASUREMENT_AC_POWER_DIVISOR,
//  661       ZCL_DATATYPE_UINT16,
//  662       ACCESS_CONTROL_READ ,
//  663       (void *)&zha_project_Illumiance_Value
//  664     }
//  665     },
//  666     {
//  667     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  668     { 
//  669       ATTRID_ELECTRICAL_MEASUREMENT_AC_ALARMS_MASK,
//  670       ZCL_DATATYPE_BITMAP16,
//  671       ACCESS_CONTROL_READ ,
//  672       (void *)&zha_project_Illumiance_Value
//  673     }
//  674     },
//  675     {
//  676     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  677     { 
//  678       ATTRID_ELECTRICAL_MEASUREMENT_AC_VOLTAGE_OVERLOAD,
//  679       ZCL_DATATYPE_INT16,
//  680       ACCESS_CONTROL_READ ,
//  681       (void *)&zha_project_Illumiance_Value
//  682     }
//  683     },
//  684     {
//  685     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  686     { 
//  687       ATTRID_ELECTRICAL_MEASUREMENT_AC_CURRENT_OVERLOAD,
//  688       ZCL_DATATYPE_INT16,
//  689       ACCESS_CONTROL_READ ,
//  690       (void *)&zha_project_Illumiance_Value
//  691     }
//  692     },
//  693     {
//  694     ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
//  695     { 
//  696       ATTRID_ELECTRICAL_MEASUREMENT_AC_ACTIVE_POWER_OVERLOAD,
//  697       ZCL_DATATYPE_INT16,
//  698       ACCESS_CONTROL_READ ,
//  699       (void *)&zha_project_Illumiance_Value
//  700     }
//  701     },
//  702 
//  703 #endif
//  704 #ifdef ZCL_DIAGNOSTIC
//  705    {
//  706     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  707     {  // Attribute record
//  708       ATTRID_DIAGNOSTIC_NUMBER_OF_RESETS,
//  709       ZCL_DATATYPE_UINT16,
//  710       ACCESS_CONTROL_READ,
//  711       NULL // Use application's callback to Read this attribute
//  712     }
//  713   },
//  714   {
//  715     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  716     {  // Attribute record
//  717       ATTRID_DIAGNOSTIC_PERSISTENT_MEMORY_WRITES,
//  718       ZCL_DATATYPE_UINT16,
//  719       ACCESS_CONTROL_READ,
//  720       NULL // Use application's callback to Read this attribute
//  721     }
//  722   },
//  723   {
//  724     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  725     {  // Attribute record
//  726       ATTRID_DIAGNOSTIC_MAC_RX_BCAST,
//  727       ZCL_DATATYPE_UINT32,
//  728       ACCESS_CONTROL_READ,
//  729       NULL // Use application's callback to Read this attribute
//  730     }
//  731   },
//  732   {
//  733     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  734     {  // Attribute record
//  735       ATTRID_DIAGNOSTIC_MAC_TX_BCAST,
//  736       ZCL_DATATYPE_UINT32,
//  737       ACCESS_CONTROL_READ,
//  738       NULL // Use application's callback to Read this attribute
//  739     }
//  740   },
//  741   {
//  742     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  743     {  // Attribute record
//  744       ATTRID_DIAGNOSTIC_MAC_RX_UCAST,
//  745       ZCL_DATATYPE_UINT32,
//  746       ACCESS_CONTROL_READ,
//  747       NULL // Use application's callback to Read this attribute
//  748     }
//  749   },
//  750   {
//  751     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  752     {  // Attribute record
//  753       ATTRID_DIAGNOSTIC_MAC_TX_UCAST,
//  754       ZCL_DATATYPE_UINT32,
//  755       ACCESS_CONTROL_READ,
//  756       NULL // Use application's callback to Read this attribute
//  757     }
//  758   },
//  759   {
//  760     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  761     {  // Attribute record
//  762       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_RETRY,
//  763       ZCL_DATATYPE_UINT16,
//  764       ACCESS_CONTROL_READ,
//  765       NULL // Use application's callback to Read this attribute
//  766     }
//  767   },
//  768   {
//  769     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  770     {  // Attribute record
//  771       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_FAIL,
//  772       ZCL_DATATYPE_UINT16,
//  773       ACCESS_CONTROL_READ,
//  774       NULL // Use application's callback to Read this attribute
//  775     }
//  776   },
//  777   {
//  778     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  779     {  // Attribute record
//  780       ATTRID_DIAGNOSTIC_APS_RX_BCAST,
//  781       ZCL_DATATYPE_UINT16,
//  782       ACCESS_CONTROL_READ,
//  783       NULL // Use application's callback to Read this attribute
//  784     }
//  785   },
//  786   {
//  787     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  788     {  // Attribute record
//  789       ATTRID_DIAGNOSTIC_APS_TX_BCAST,
//  790       ZCL_DATATYPE_UINT16,
//  791       ACCESS_CONTROL_READ,
//  792       NULL // Use application's callback to Read this attribute
//  793     }
//  794   },
//  795   {
//  796     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  797     {  // Attribute record
//  798       ATTRID_DIAGNOSTIC_APS_RX_UCAST,
//  799       ZCL_DATATYPE_UINT16,
//  800       ACCESS_CONTROL_READ,
//  801       NULL // Use application's callback to Read this attribute
//  802     }
//  803   },
//  804   {
//  805     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  806     {  // Attribute record
//  807       ATTRID_DIAGNOSTIC_APS_TX_UCAST_SUCCESS,
//  808       ZCL_DATATYPE_UINT16,
//  809       ACCESS_CONTROL_READ,
//  810       NULL // Use application's callback to Read this attribute
//  811     }
//  812   },
//  813   {
//  814     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  815     {  // Attribute record
//  816       ATTRID_DIAGNOSTIC_APS_TX_UCAST_RETRY,
//  817       ZCL_DATATYPE_UINT16,
//  818       ACCESS_CONTROL_READ,
//  819       NULL // Use application's callback to Read this attribute
//  820     }
//  821   },
//  822   {
//  823     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  824     {  // Attribute record
//  825       ATTRID_DIAGNOSTIC_APS_TX_UCAST_FAIL,
//  826       ZCL_DATATYPE_UINT16,
//  827       ACCESS_CONTROL_READ,
//  828       NULL // Use application's callback to Read this attribute
//  829     }
//  830   },
//  831   {
//  832     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  833     {  // Attribute record
//  834       ATTRID_DIAGNOSTIC_ROUTE_DISC_INITIATED,
//  835       ZCL_DATATYPE_UINT16,
//  836       ACCESS_CONTROL_READ,
//  837       NULL // Use application's callback to Read this attribute
//  838     }
//  839   },
//  840   {
//  841     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  842     {  // Attribute record
//  843       ATTRID_DIAGNOSTIC_NEIGHBOR_ADDED,
//  844       ZCL_DATATYPE_UINT16,
//  845       ACCESS_CONTROL_READ,
//  846       NULL // Use application's callback to Read this attribute
//  847     }
//  848   },
//  849   {
//  850     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  851     {  // Attribute record
//  852       ATTRID_DIAGNOSTIC_NEIGHBOR_REMOVED,
//  853       ZCL_DATATYPE_UINT16,
//  854       ACCESS_CONTROL_READ,
//  855       NULL // Use application's callback to Read this attribute
//  856     }
//  857   },
//  858   {
//  859     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  860     {  // Attribute record
//  861       ATTRID_DIAGNOSTIC_NEIGHBOR_STALE,
//  862       ZCL_DATATYPE_UINT16,
//  863       ACCESS_CONTROL_READ,
//  864       NULL // Use application's callback to Read this attribute
//  865     }
//  866   },
//  867   {
//  868     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  869     {  // Attribute record
//  870       ATTRID_DIAGNOSTIC_JOIN_INDICATION,
//  871       ZCL_DATATYPE_UINT16,
//  872       ACCESS_CONTROL_READ,
//  873       NULL // Use application's callback to Read this attribute
//  874     }
//  875   },
//  876   {
//  877     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  878     {  // Attribute record
//  879       ATTRID_DIAGNOSTIC_CHILD_MOVED,
//  880       ZCL_DATATYPE_UINT16,
//  881       ACCESS_CONTROL_READ,
//  882       NULL // Use application's callback to Read this attribute
//  883     }
//  884   },
//  885   {
//  886     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  887     {  // Attribute record
//  888       ATTRID_DIAGNOSTIC_NWK_FC_FAILURE,
//  889       ZCL_DATATYPE_UINT16,
//  890       ACCESS_CONTROL_READ,
//  891       NULL // Use application's callback to Read this attribute
//  892     }
//  893   },
//  894   {
//  895     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  896     {  // Attribute record
//  897       ATTRID_DIAGNOSTIC_APS_FC_FAILURE,
//  898       ZCL_DATATYPE_UINT16,
//  899       ACCESS_CONTROL_READ,
//  900       NULL // Use application's callback to Read this attribute
//  901     }
//  902   },
//  903   {
//  904     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  905     {  // Attribute record
//  906       ATTRID_DIAGNOSTIC_APS_UNAUTHORIZED_KEY,
//  907       ZCL_DATATYPE_UINT16,
//  908       ACCESS_CONTROL_READ,
//  909       NULL // Use application's callback to Read this attribute
//  910     }
//  911   },
//  912   {
//  913     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  914     {  // Attribute record
//  915       ATTRID_DIAGNOSTIC_NWK_DECRYPT_FAILURES,
//  916       ZCL_DATATYPE_UINT16,
//  917       ACCESS_CONTROL_READ,
//  918       NULL // Use application's callback to Read this attribute
//  919     }
//  920   },
//  921   {
//  922     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  923     {  // Attribute record
//  924       ATTRID_DIAGNOSTIC_APS_DECRYPT_FAILURES,
//  925       ZCL_DATATYPE_UINT16,
//  926       ACCESS_CONTROL_READ,
//  927       NULL // Use application's callback to Read this attribute
//  928     }
//  929   },
//  930   {
//  931     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  932     {  // Attribute record
//  933       ATTRID_DIAGNOSTIC_PACKET_BUFFER_ALLOCATE_FAILURES,
//  934       ZCL_DATATYPE_UINT16,
//  935       ACCESS_CONTROL_READ,
//  936       NULL // Use application's callback to Read this attribute
//  937     }
//  938   },
//  939   {
//  940     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  941     {  // Attribute record
//  942       ATTRID_DIAGNOSTIC_RELAYED_UCAST,
//  943       ZCL_DATATYPE_UINT16,
//  944       ACCESS_CONTROL_READ,
//  945       NULL // Use application's callback to Read this attribute
//  946     }
//  947   },
//  948   {
//  949     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  950     {  // Attribute record
//  951       ATTRID_DIAGNOSTIC_PHY_TO_MAC_QUEUE_LIMIT_REACHED,
//  952       ZCL_DATATYPE_UINT16,
//  953       ACCESS_CONTROL_READ,
//  954       NULL // Use application's callback to Read this attribute
//  955     }
//  956   },
//  957   {
//  958     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  959     {  // Attribute record
//  960       ATTRID_DIAGNOSTIC_PACKET_VALIDATE_DROP_COUNT,
//  961       ZCL_DATATYPE_UINT16,
//  962       ACCESS_CONTROL_READ,
//  963       NULL // Use application's callback to Read this attribute
//  964     }
//  965   },
//  966   {
//  967     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  968     {  // Attribute record
//  969       ATTRID_DIAGNOSTIC_AVERAGE_MAC_RETRY_PER_APS_MESSAGE_SENT,
//  970       ZCL_DATATYPE_UINT16,
//  971       ACCESS_CONTROL_READ,
//  972       NULL // Use application's callback to Read this attribute
//  973     }
//  974   },
//  975   {
//  976     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  977     {  // Attribute record
//  978       ATTRID_DIAGNOSTIC_LAST_MESSAGE_LQI,
//  979       ZCL_DATATYPE_UINT8,
//  980       ACCESS_CONTROL_READ,
//  981       NULL // Use application's callback to Read this attribute
//  982     }
//  983   },
//  984   {
//  985     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  986     {  // Attribute record
//  987       ATTRID_DIAGNOSTIC_LAST_MESSAGE_RSSI,
//  988       ZCL_DATATYPE_INT8,
//  989       ACCESS_CONTROL_READ,
//  990       NULL // Use application's callback to Read this attribute
//  991     }
//  992   },
//  993 #endif // ZCL_DIAGNOSTIC
//  994 };
//  995 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  996 uint8 CONST zha_project_NumAttributes = ( sizeof(zha_project_Attrs) / sizeof(zha_project_Attrs[0]) );
zha_project_NumAttributes:
        DB 46
//  997 
//  998 /*********************************************************************
//  999  * SIMPLE DESCRIPTOR
// 1000  */
// 1001 // This is the Cluster ID List and should be filled with Application
// 1002 // specific cluster IDs.
// 1003 #if ZG_BUILD_COORDINATOR_TYPE 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
// 1004 const cId_t zha_project_InClusterList[] =
zha_project_InClusterList:
        DATA16
        DW 0
        DW 5
        DW 4
        DW 6
        DW 1280
        DW 1026
        DW 1029
        DW 1024
        DW 1282
        DW 768
        DW 3
        DW 4
        DW 8
// 1005 {
// 1006   ZCL_CLUSTER_ID_GEN_BASIC,
// 1007   ZCL_CLUSTER_ID_GEN_SCENES,
// 1008   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1009   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1010   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1011   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
// 1012   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1013   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
// 1014   ZCL_CLUSTER_ID_SS_IAS_WD,
// 1015   ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
// 1016   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1017   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1018 #ifdef ZCL_LEVEL_CTRL
// 1019   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL
// 1020 #endif
// 1021 };
// 1022 // work-around for compiler bug... IAR can't calculate size of array with #if options.
// 1023 #ifdef ZCL_LEVEL_CTRL
// 1024  #define ZCLSAMPLELIGHT_MAX_INCLUSTERS   6
// 1025 #else
// 1026  #define ZCLSAMPLELIGHT_MAX_INCLUSTERS   5
// 1027 #endif
// 1028 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
// 1029 const cId_t zha_project_OutClusterList[] =
zha_project_OutClusterList:
        DATA16
        DW 0
        DW 5
        DW 4
        DW 6
        DW 8
        DW 1280
        DW 1026
        DW 1029
        DW 1024
        DW 1282
        DW 768
        DW 3
        DW 4
// 1030 {
// 1031   ZCL_CLUSTER_ID_GEN_BASIC,
// 1032   ZCL_CLUSTER_ID_GEN_SCENES,
// 1033   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1034   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1035   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1036   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1037   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
// 1038   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1039   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
// 1040   ZCL_CLUSTER_ID_SS_IAS_WD,
// 1041   ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,
// 1042   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1043   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1044 };
// 1045 #define ZCLSAMPLELIGHT_MAX_OUTCLUSTERS  (sizeof(zha_project_OutClusterList) / sizeof(zha_project_OutClusterList[0]))
// 1046 

        RSEG XDATA_I:XDATA:NOROOT(0)
// 1047 SimpleDescriptionFormat_t zha_project_SimpleDesc =
zha_project_SimpleDesc:
        DATA8
        DS 12
        REQUIRE `?<Initializer for zha_project_SimpleDesc>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LocationDescript`:
        DATA8
        DB 16
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_DeviceEnable>`:
        DATA8
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_BatteryVoltage>`:
        DATA8
        DB 5

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_BatteryPercent>`:
        DATA8
        DB 30

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelCurrentLeve`:
        DATA8
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOnOffTransi`:
        DATA16
        DW 20

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOnLevel>`:
        DATA8
        DB 126

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOnTransitio`:
        DATA16
        DW 20

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_LevelOffTransiti`:
        DATA16
        DW 20

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zha_project_SimpleDesc>`:
        DATA8
        DB 1
        DATA16
        DW 260
        DW 257
        DATA8
        DB 0
        DB 6
        DATA16
        DW zha_project_InClusterList
        DATA8
        DB 13
        DATA16
        DW zha_project_OutClusterList

        END
// 1048 {
// 1049   SAMPLELIGHT_ENDPOINT,                  //  int Endpoint;
// 1050   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId;
// 1051 #ifdef ZCL_LEVEL_CTRL
// 1052   ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId;
// 1053 #else
// 1054   ZCL_HA_DEVICEID_ON_OFF_LIGHT,          //  uint16 AppDeviceId;
// 1055 #endif
// 1056   0,            //  int   AppDevVer:4;
// 1057   0,                     //  int   AppFlags:4;
// 1058   ZCLSAMPLELIGHT_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
// 1059   (cId_t *)&zha_project_InClusterList, //  byte *pAppInClusterList;
// 1060   ZCLSAMPLELIGHT_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
// 1061   (cId_t *)&zha_project_OutClusterList //  byte *pAppInClusterList;
// 1062 };
// 1063 #endif
// 1064 
// 1065 
// 1066 
// 1067 
// 1068 #if ZG_BUILD_ENDDEVICE_TYPE
// 1069 
// 1070 const cId_t zclZHAtest_InClusterList1[6] =
// 1071 {
// 1072   ZCL_CLUSTER_ID_GEN_BASIC,
// 1073   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1074   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1075   ZCL_CLUSTER_ID_GEN_SCENES,
// 1076   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1077   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1078   //ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1079   //GENERICAPP_CLUSTERID
// 1080 };
// 1081 
// 1082 const cId_t zclZHAtest_InClusterList2[7] =
// 1083 {
// 1084   ZCL_CLUSTER_ID_GEN_BASIC,
// 1085   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1086   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1087   ZCL_CLUSTER_ID_GEN_SCENES,
// 1088   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1089   ZCL_CLUSTER_ID_GEN_ON_OFF,  
// 1090   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1091 //  GENERICAPP_CLUSTERID
// 1092 };
// 1093 const cId_t zclZHAtest_InClusterList3[8] =
// 1094 {
// 1095   ZCL_CLUSTER_ID_GEN_BASIC,
// 1096   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1097   ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1098   ZCL_CLUSTER_ID_GEN_SCENES,
// 1099   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1100   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1101   ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1102   ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL,  
// 1103 //  GENERICAPP_CLUSTERID
// 1104 };
// 1105 
// 1106 const cId_t zclZHAtest_InClusterList4[5] =
// 1107 {
// 1108   ZCL_CLUSTER_ID_GEN_BASIC,
// 1109   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1110   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1111   ZCL_CLUSTER_ID_GEN_SCENES,
// 1112   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1113   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
// 1114   //ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1115 //  GENERICAPP_CLUSTERID
// 1116 };
// 1117 
// 1118 const cId_t zclZHAtest_InClusterList5[3] =
// 1119 {
// 1120   ZCL_CLUSTER_ID_GEN_BASIC,
// 1121   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1122   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1123 //  GENERICAPP_CLUSTERID
// 1124 };
// 1125 
// 1126 const cId_t zclZHAtest_InClusterList6[5] =
// 1127 {
// 1128   ZCL_CLUSTER_ID_GEN_BASIC,
// 1129   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1130   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1131   ZCL_CLUSTER_ID_GEN_SCENES,
// 1132   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1133   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1134 //  GENERICAPP_CLUSTERID
// 1135 };
// 1136 
// 1137 const cId_t zclZHAtest_InClusterList7[3] =
// 1138 {
// 1139   ZCL_CLUSTER_ID_GEN_BASIC,
// 1140   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1141   ZCL_CLUSTER_ID_SS_IAS_ZONE,  
// 1142 //  GENERICAPP_CLUSTERID
// 1143 };
// 1144 
// 1145 const cId_t zclZHAtest_InClusterList8[5] =
// 1146 {
// 1147   ZCL_CLUSTER_ID_GEN_BASIC,
// 1148   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1149   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1150   ZCL_CLUSTER_ID_GEN_SCENES,
// 1151   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1152   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,  
// 1153 //  GENERICAPP_CLUSTERID
// 1154 };
// 1155 
// 1156 const cId_t zclZHAtest_InClusterList10[3] =
// 1157 {
// 1158   ZCL_CLUSTER_ID_GEN_BASIC,
// 1159   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1160   ZCL_CLUSTER_ID_SS_IAS_ZONE,  
// 1161 //  GENERICAPP_CLUSTERID
// 1162 };
// 1163 
// 1164 const cId_t zclZHAtest_InClusterList9[4] =
// 1165 {
// 1166   ZCL_CLUSTER_ID_GEN_BASIC,
// 1167   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1168   ZCL_CLUSTER_ID_SS_IAS_WD, 
// 1169   ZCL_CLUSTER_ID_SS_IAS_ZONE, 
// 1170 //  GENERICAPP_CLUSTERID
// 1171 };
// 1172 
// 1173 const cId_t zclZHAtest_InClusterList11[3] =
// 1174 {
// 1175   ZCL_CLUSTER_ID_GEN_BASIC,
// 1176   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1177   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1178 //  GENERICAPP_CLUSTERID
// 1179 };
// 1180 
// 1181 const cId_t zclZHAtest_InClusterList14[7] =
// 1182 {
// 1183   ZCL_CLUSTER_ID_GEN_BASIC,
// 1184   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1185   //ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 1186   ZCL_CLUSTER_ID_GEN_SCENES,
// 1187   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1188   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1189   ZCL_CLUSTER_ID_SE_METERING,
// 1190   ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
// 1191  //   GENERICAPP_CLUSTERID
// 1192 };
// 1193 
// 1194 
// 1195 const cId_t zclZHAtest_OutClusterList1[4] =
// 1196 {
// 1197   ZCL_CLUSTER_ID_GEN_BASIC,
// 1198   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1199   ZCL_CLUSTER_ID_GEN_SCENES,
// 1200   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1201   //ZCL_CLUSTER_ID_SS_IAS_ZONE
// 1202  //   GENERICAPP_CLUSTERID
// 1203 };
// 1204 
// 1205 
// 1206 const cId_t zclZHAtest_OutClusterList2[4] =
// 1207 {
// 1208   ZCL_CLUSTER_ID_GEN_BASIC,
// 1209   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1210   ZCL_CLUSTER_ID_GEN_SCENES,
// 1211   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1212  //   GENERICAPP_CLUSTERID
// 1213 };
// 1214 
// 1215 const cId_t zclZHAtest_OutClusterList3[4] =
// 1216 {
// 1217   ZCL_CLUSTER_ID_GEN_BASIC,
// 1218   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1219   ZCL_CLUSTER_ID_GEN_SCENES,
// 1220   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1221  //   GENERICAPP_CLUSTERID
// 1222 };
// 1223 
// 1224 const cId_t zclZHAtest_OutClusterList4[5] =
// 1225 {
// 1226   ZCL_CLUSTER_ID_GEN_BASIC,
// 1227   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1228   ZCL_CLUSTER_ID_GEN_SCENES,
// 1229   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1230   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,  
// 1231  //   GENERICAPP_CLUSTERID
// 1232 };
// 1233 
// 1234 const cId_t zclZHAtest_OutClusterList5[3] =
// 1235 {
// 1236   ZCL_CLUSTER_ID_GEN_BASIC,
// 1237   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1238   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1239  //   GENERICAPP_CLUSTERID
// 1240 };
// 1241 
// 1242 
// 1243 
// 1244 const cId_t zclZHAtest_OutClusterList6[5] =
// 1245 {
// 1246   ZCL_CLUSTER_ID_GEN_BASIC,
// 1247   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1248   ZCL_CLUSTER_ID_GEN_SCENES,
// 1249   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1250   ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY,
// 1251   //GENERICAPP_CLUSTERID
// 1252 };
// 1253 
// 1254 const cId_t zclZHAtest_OutClusterList7[3] =
// 1255 {
// 1256   ZCL_CLUSTER_ID_GEN_BASIC,
// 1257   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1258   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1259   //GENERICAPP_CLUSTERID
// 1260 };
// 1261 
// 1262 const cId_t zclZHAtest_OutClusterList8[5] =
// 1263 {
// 1264   ZCL_CLUSTER_ID_GEN_BASIC,
// 1265   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1266   ZCL_CLUSTER_ID_GEN_SCENES,
// 1267   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1268   ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT,
// 1269  //   GENERICAPP_CLUSTERID
// 1270 };
// 1271 
// 1272 const cId_t zclZHAtest_OutClusterList9[4] =
// 1273 {
// 1274   ZCL_CLUSTER_ID_GEN_BASIC,
// 1275   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1276   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1277   ZCL_CLUSTER_ID_SS_IAS_WD,
// 1278  //   GENERICAPP_CLUSTERID
// 1279 };
// 1280 
// 1281 const cId_t zclZHAtest_OutClusterList10[3] =
// 1282 {
// 1283   ZCL_CLUSTER_ID_GEN_BASIC,
// 1284   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1285   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1286  //   GENERICAPP_CLUSTERID
// 1287 };
// 1288 
// 1289 const cId_t zclZHAtest_OutClusterList11[3] =
// 1290 {
// 1291   ZCL_CLUSTER_ID_GEN_BASIC,
// 1292   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1293   ZCL_CLUSTER_ID_SS_IAS_ZONE,
// 1294  //   GENERICAPP_CLUSTERID
// 1295 };
// 1296 
// 1297 const cId_t zclZHAtest_OutClusterList14[7] =
// 1298 {
// 1299   ZCL_CLUSTER_ID_GEN_BASIC,
// 1300   ZCL_CLUSTER_ID_GEN_POWER_CFG,
// 1301   ZCL_CLUSTER_ID_GEN_SCENES,
// 1302   ZCL_CLUSTER_ID_GEN_GROUPS,
// 1303   ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1304   ZCL_CLUSTER_ID_SE_METERING,
// 1305   ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT,
// 1306  //   GENERICAPP_CLUSTERID
// 1307 };
// 1308 
// 1309 
// 1310 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc1 =
// 1311 {
// 1312   1,                  //  int Endpoint;
// 1313   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1314   ZCL_HA_DEVICEID_ON_OFF_LIGHT,        //  uint16 AppDeviceId[2];
// 1315   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1316   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1317   6,         //  byte  AppNumInClusters;
// 1318   (cId_t *)zclZHAtest_InClusterList1, //  byte *pAppInClusterList;
// 1319   4,        //  byte  AppNumInClusters;
// 1320   (cId_t *)zclZHAtest_OutClusterList1 //  byte *pAppInClusterList;
// 1321 };
// 1322 
// 1323 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc2 =
// 1324 {
// 1325   1,                  //  int Endpoint;
// 1326   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1327   ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId[2];
// 1328   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1329   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1330   7,         //  byte  AppNumInClusters;
// 1331   (cId_t *)zclZHAtest_InClusterList2, //  byte *pAppInClusterList;
// 1332   4,        //  byte  AppNumInClusters;
// 1333   (cId_t *)zclZHAtest_OutClusterList2 //  byte *pAppInClusterList;
// 1334 };
// 1335 
// 1336 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc3 =
// 1337 {
// 1338   1,                  //  int Endpoint;
// 1339   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1340   ZCL_HA_DEVICEID_COLORED_DIMMABLE_LIGHT,        //  uint16 AppDeviceId[2];
// 1341   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1342   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1343   8,         //  byte  AppNumInClusters;
// 1344   (cId_t *)zclZHAtest_InClusterList3, //  byte *pAppInClusterList;
// 1345   4,        //  byte  AppNumInClusters;
// 1346   (cId_t *)zclZHAtest_OutClusterList3 //  byte *pAppInClusterList;
// 1347 };
// 1348 
// 1349 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc4 =
// 1350 {
// 1351   1,                  //  int Endpoint;
// 1352   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1353   ZCL_HA_DEVICEID_TEMPERATURE_SENSOR,        //  uint16 AppDeviceId[2];
// 1354   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1355   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1356   5,         //  byte  AppNumInClusters;
// 1357   (cId_t *)zclZHAtest_InClusterList4, //  byte *pAppInClusterList;
// 1358   5,        //  byte  AppNumInClusters;
// 1359   (cId_t *)zclZHAtest_OutClusterList4 //  byte *pAppInClusterList;
// 1360 };
// 1361 
// 1362 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc5 =
// 1363 {
// 1364   1,                  //  int Endpoint;
// 1365   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1366   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1367   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1368   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1369   3,         //  byte  AppNumInClusters;
// 1370   (cId_t *)zclZHAtest_InClusterList5, //  byte *pAppInClusterList;
// 1371   3,        //  byte  AppNumInClusters;
// 1372   (cId_t *)zclZHAtest_OutClusterList5 //  byte *pAppInClusterList;
// 1373 };
// 1374 
// 1375 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc6 =
// 1376 {
// 1377   1,                  //  int Endpoint;
// 1378   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1379   0x0307,        //  uint16 AppDeviceId[2];
// 1380   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1381   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1382   5,         //  byte  AppNumInClusters;
// 1383   (cId_t *)zclZHAtest_InClusterList6, //  byte *pAppInClusterList;
// 1384   5,        //  byte  AppNumInClusters;
// 1385   (cId_t *)zclZHAtest_OutClusterList6 //  byte *pAppInClusterList;
// 1386 };
// 1387 
// 1388 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc7 =
// 1389 {
// 1390   1,                  //  int Endpoint;
// 1391   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1392   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1393   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1394   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1395   3,         //  byte  AppNumInClusters;
// 1396   (cId_t *)zclZHAtest_InClusterList7, //  byte *pAppInClusterList;
// 1397   3,        //  byte  AppNumInClusters;
// 1398   (cId_t *)zclZHAtest_OutClusterList7 //  byte *pAppInClusterList;
// 1399 };
// 1400 
// 1401 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc8 =
// 1402 {
// 1403   1,                  //  int Endpoint;
// 1404   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1405   0x0308,        //  uint16 AppDeviceId[2];
// 1406   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1407   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1408   5,         //  byte  AppNumInClusters;
// 1409   (cId_t *)zclZHAtest_InClusterList8, //  byte *pAppInClusterList;
// 1410   5,        //  byte  AppNumInClusters;
// 1411   (cId_t *)zclZHAtest_OutClusterList8 //  byte *pAppInClusterList;
// 1412 };
// 1413 
// 1414 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc9 =
// 1415 {
// 1416   1,                  //  int Endpoint;
// 1417   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1418   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1419   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1420   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1421   4,         //  byte  AppNumInClusters;
// 1422   (cId_t *)zclZHAtest_InClusterList9, //  byte *pAppInClusterList;
// 1423   4,        //  byte  AppNumInClusters;
// 1424   (cId_t *)zclZHAtest_OutClusterList9 //  byte *pAppInClusterList;
// 1425 };
// 1426 
// 1427 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc10 =
// 1428 {
// 1429   1,                  //  int Endpoint;
// 1430   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1431   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1432   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1433   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1434   3,         //  byte  AppNumInClusters;
// 1435   (cId_t *)zclZHAtest_InClusterList10, //  byte *pAppInClusterList;
// 1436   3,        //  byte  AppNumInClusters;
// 1437   (cId_t *)zclZHAtest_OutClusterList10 //  byte *pAppInClusterList;
// 1438 };
// 1439 
// 1440 
// 1441 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc11 =
// 1442 {
// 1443   1,                  //  int Endpoint;
// 1444   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1445   ZCL_HA_DEVICEID_IAS_ZONE,        //  uint16 AppDeviceId[2];
// 1446   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1447   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1448   3,         //  byte  AppNumInClusters;
// 1449   (cId_t *)zclZHAtest_InClusterList11, //  byte *pAppInClusterList;
// 1450   3,        //  byte  AppNumInClusters;
// 1451   (cId_t *)zclZHAtest_OutClusterList11 //  byte *pAppInClusterList;
// 1452 };
// 1453 
// 1454 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc12 =
// 1455 {
// 1456   1,                  //  int Endpoint;
// 1457   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1458   ZCL_HA_DEVICEID_ON_OFF_LIGHT_SWITCH,        //  uint16 AppDeviceId[2];
// 1459   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1460   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1461   4,         //  byte  AppNumInClusters;
// 1462   (cId_t *)zclZHAtest_OutClusterList1, //  byte *pAppInClusterList;
// 1463   6,        //  byte  AppNumInClusters;
// 1464   (cId_t *)zclZHAtest_InClusterList1 //  byte *pAppInClusterList;
// 1465 };
// 1466 
// 1467 SimpleDescriptionFormat_t zclZHAtest_SimpleDesc14 =
// 1468 {
// 1469   1,                                    //  int Endpoint;
// 1470   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId[2];
// 1471   0x0202,                           //  uint16 AppDeviceId[2];
// 1472   zha_project_DEVICE_VERSION,            //  int   AppDevVer:4;
// 1473   zha_project_FLAGS,                     //  int   AppFlags:4;
// 1474   7,                                //  byte  AppNumInClusters;
// 1475   (cId_t *)zclZHAtest_InClusterList14, //  byte *pAppInClusterList;
// 1476   7,                                //  byte  AppNumInClusters;
// 1477   (cId_t *)zclZHAtest_OutClusterList14 //  byte *pAppInClusterList;
// 1478 };
// 1479 
// 1480 
// 1481 #endif
// 1482 /*********************************************************************
// 1483  * GLOBAL FUNCTIONS
// 1484  */
// 1485 
// 1486 /*********************************************************************
// 1487  * LOCAL FUNCTIONS
// 1488  */
// 1489 
// 1490 /****************************************************************************
// 1491 ****************************************************************************/
// 1492 
// 1493 
// 
// 369 bytes in segment CODE_C
//  40 bytes in segment XDATA_I
//  40 bytes in segment XDATA_ID
//  97 bytes in segment XDATA_ROM_C
//  29 bytes in segment XDATA_Z
// 
// 409 bytes of CODE  memory
//  97 bytes of CONST memory
//  69 bytes of XDATA memory
//
//Errors: none
//Warnings: none
